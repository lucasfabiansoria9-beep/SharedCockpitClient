<ModelBehaviors>
	<!-- IN: ANIM_SIMVAR name of the simvar used to drive the animation -->
	<!-- IN: ANIM_SIMVAR_UNITS name of the simvar used to drive the animation -->
	<!-- IN (opt): ANIM_SIMVAR_BIAS value added to the simvar value returned -->
	<!-- IN (opt): ANIM_SIMVAR_SCALE value multiplied to the simvar value returned (w/ bias already applied) -->
	<!-- IN (opt): OUT_ANIM_CODE_PARAM_NAME Name given to the parameter out, ANIM_CODE by default -->
	<!-- OUT: ANIM_CODE code for this simvar -->
	<ParametersFn Name="ASOBO_Anim_Simvar_Code_Parameters">
		<Parameters Type="Default">
			<UseParametersFn Name="ASOBO_Anim_Sim_Default_Parameters"/>
			<OUT_ANIM_CODE_PARAM_NAME>ANIM_CODE</OUT_ANIM_CODE_PARAM_NAME>
			<FORMAT_SIMVAR>True</FORMAT_SIMVAR>
		</Parameters>
		<ReturnParameters>
			<UseParametersFn Name="ASOBO_Transform_Simvar_Helper">
				<IN_SIMVAR>#ANIM_SIMVAR#</IN_SIMVAR>
				<IN_SIMVAR_UNITS>#ANIM_SIMVAR_UNITS#</IN_SIMVAR_UNITS>
				<Condition NotEmpty="ANIM_SIMVAR_BIAS">
					<OUT_SIMVAR_BIAS>#ANIM_SIMVAR_BIAS#</OUT_SIMVAR_BIAS>					
				</Condition>
				<Condition NotEmpty="ANIM_SIMVAR_SCALE">
					<OUT_SIMVAR_SCALE>#ANIM_SIMVAR_SCALE#</OUT_SIMVAR_SCALE>
				</Condition>
				<IN_PARAM_NAME>ANIM_CODE</IN_PARAM_NAME>
				<OUT_PARAM_NAME>#OUT_ANIM_CODE_PARAM_NAME#</OUT_PARAM_NAME>
			</UseParametersFn>
		</ReturnParameters>
	</ParametersFn>
	<!-- IN: ANIM_CODE (RPN snippet) -->
	<!-- IN: ANIM_TEST_NO_FAILURE_CODE (RPN snippet, return false to trigger the failure) -->
	<!-- IN (opt): OUT_ANIM_CODE_PARAM_NAME Name given to the parameter out, ANIM_CODE by default -->
	<!-- OUT: ANIM_CODE code for this simvar -->
	<ParametersFn Name="ASOBO_Anim_Failure_Parameters">
		<Parameters Type="Default">
			<OUT_ANIM_CODE_PARAM_NAME>ANIM_CODE</OUT_ANIM_CODE_PARAM_NAME>
			<CODE_WHEN_NO_FAILURE_ACTIVE>#ANIM_CODE#</CODE_WHEN_NO_FAILURE_ACTIVE>
		</Parameters>
		<ReturnParameters>
			<UseParametersFn Name="ASOBO_Failure_Helper">
				<TEST_NO_FAILURE>#ANIM_TEST_NO_FAILURE_CODE#</TEST_NO_FAILURE>
				<OUT_PARAM_NAME>#OUT_ANIM_CODE_PARAM_NAME#</OUT_PARAM_NAME>
			</UseParametersFn>
		</ReturnParameters>
	</ParametersFn>
	<!-- IN: ANIM_CODE (RPN snippet) -->
	<!-- IN: ANIM_LENGTH -->
	<!-- OUT: ANIM_CODE code inverted -->
	<ParametersFn Name="ASOBO_Anim_Invert_Parameters">
		<ReturnParameters>
			<ANIM_CODE>#ANIM_LENGTH# #ANIM_CODE# -</ANIM_CODE>
		</ReturnParameters>
	</ParametersFn>
	<!-- IN: ANIM_CODE (RPN snippet) -->
	<!-- IN: ANIM_LENGTH -->
	<!-- IN: REPEAT_ANIM (how many times to loop the animation) -->
	<!-- OUT: ANIM_CODE code repeated -->
	<ParametersFn Name="ASOBO_Anim_Repeat_Parameters">
		<Parameters Type="Default">
			<ANIMATION_ID>1</ANIMATION_ID>
		</Parameters>
		<Parameters Type="Default">
			<TARGET_ANIM_VAR_NAME>XMLVAR_Anim_#ANIMATION_ID#_Target</TARGET_ANIM_VAR_NAME>
			<CURRENT_ANIM_VAR_NAME>XMLVAR_Anim_#ANIMATION_ID#_Current</CURRENT_ANIM_VAR_NAME>
			<TARGET_ANIM_SCOPE>O</TARGET_ANIM_SCOPE>
			<CURRENT_ANIM_SCOPE>O</CURRENT_ANIM_SCOPE>
			<ANIM_DURATION>#REPEAT_ANIM#</ANIM_DURATION>
		</Parameters>
		<Parameters Type="Override">
			<TARGET_ANIM_VAR>#TARGET_ANIM_SCOPE#:#TARGET_ANIM_VAR_NAME#</TARGET_ANIM_VAR>
			<CURRENT_ANIM_VAR>#CURRENT_ANIM_SCOPE#:#CURRENT_ANIM_VAR_NAME#</CURRENT_ANIM_VAR>
		</Parameters>
		<Parameters Type="Override">
			<!-- Prevent animation from looking weird by enforcing some manual anim_lag -->
			<UseParametersFn Name="ASOBO_Move_Interpolation_Helper">
				<START_VALUE>(#CURRENT_ANIM_VAR#)</START_VALUE>
				<SET_NEW_VALUE>(&gt;#CURRENT_ANIM_VAR#)</SET_NEW_VALUE>
				<END_VALUE>(#TARGET_ANIM_VAR#)</END_VALUE>
				<PFN_GET_COEFFICIENT>ASOBO_Process_Animation_Move_Coefficient_Helper</PFN_GET_COEFFICIENT>
				<ANIM_LENGTH>#REPEAT_ANIM# #ANIM_LENGTH# *</ANIM_LENGTH>
			</UseParametersFn>
			<UseParametersFn Name="ASOBO_Add_Animation_Update_Helper">
				<UPDATE_ONCE>True</UPDATE_ONCE>
				<UPDATE_CODE>#ANIM_CODE# #REPEAT_ANIM# * (&gt;#CURRENT_ANIM_VAR#)</UPDATE_CODE>
			</UseParametersFn>
		</Parameters>
		<ReturnParameters>
			<ANIM_CODE>
				#ANIM_CODE# #REPEAT_ANIM# * (&gt;#TARGET_ANIM_VAR#)
				#MOVE_CODE# (#CURRENT_ANIM_VAR#) #ANIM_LENGTH# %
			</ANIM_CODE>
		</ReturnParameters>
	</ParametersFn>
	<!-- IN: ANIM_CODE (RPN snippet) -->
	<!-- IN: ANIM_LENGTH -->
	<!-- IN (opt): ANIM_DURATION (Animation duration from one end to the other) -->
	<!-- OUT: ANIM_CODE code with manually interpolated lag -->
	<ParametersFn Name="ASOBO_Manual_Anim_Lag_Parameters">
		<Parameters Type="Default">
			<ANIMATION_ID>1</ANIMATION_ID>
		</Parameters>
		<Parameters Type="Default">
			<TARGET_ANIM_VAR_NAME>XMLVAR_Anim_#ANIMATION_ID#_Target</TARGET_ANIM_VAR_NAME>
			<CURRENT_ANIM_VAR_NAME>XMLVAR_Anim_#ANIMATION_ID#_Current</CURRENT_ANIM_VAR_NAME>
			<TARGET_ANIM_SCOPE>O</TARGET_ANIM_SCOPE>
			<CURRENT_ANIM_SCOPE>O</CURRENT_ANIM_SCOPE>
			<ANIM_DURATION>1</ANIM_DURATION>
		</Parameters>
		<Parameters Type="Override">
			<TARGET_ANIM_VAR>#TARGET_ANIM_SCOPE#:#TARGET_ANIM_VAR_NAME#</TARGET_ANIM_VAR>
			<CURRENT_ANIM_VAR>#CURRENT_ANIM_SCOPE#:#CURRENT_ANIM_VAR_NAME#</CURRENT_ANIM_VAR>
		</Parameters>
		<Parameters Type="Override">
			<UseParametersFn Name="ASOBO_Move_Interpolation_Helper">
				<START_VALUE>(#CURRENT_ANIM_VAR#)</START_VALUE>
				<SET_NEW_VALUE>(&gt;#CURRENT_ANIM_VAR#)</SET_NEW_VALUE>
				<END_VALUE>(#TARGET_ANIM_VAR#)</END_VALUE>
				<PFN_GET_COEFFICIENT>ASOBO_Process_Animation_Move_Coefficient_Helper</PFN_GET_COEFFICIENT>
			</UseParametersFn>
			<UseParametersFn Name="ASOBO_Add_Animation_Update_Helper">
				<UPDATE_ONCE>True</UPDATE_ONCE>
				<UPDATE_CODE>#ANIM_CODE# (&gt;#CURRENT_ANIM_VAR#)</UPDATE_CODE>
			</UseParametersFn>
		</Parameters>
		<ReturnParameters>
			<ANIM_CODE>#ANIM_CODE# (&gt;#TARGET_ANIM_VAR#) #MOVE_CODE# (#CURRENT_ANIM_VAR#)</ANIM_CODE>
		</ReturnParameters>
	</ParametersFn>
	<!-- Save transforms into Anim_Code_Transform_Stack depending on some parameters -->
	<ParametersFn Name="ASOBO_Process_Anim_Transforms_Parameters">
		<Parameters Type="Default">
			<USE_ASOBO_ANIM_TRANSFORMS>True</USE_ASOBO_ANIM_TRANSFORMS>
		</Parameters>
		<Parameters Type="Default">
			<!-- Order of definition decides which will be applied first -->
			<Condition NotEmpty="PFN_REGISTER_ANIM_TRANSFORM_APPLIED_FIRST">
				<UseParametersFn Name="#PFN_REGISTER_ANIM_TRANSFORM_APPLIED_FIRST#"/>
			</Condition>
			<Condition Valid="USE_ASOBO_ANIM_TRANSFORMS">
				<Condition NotEmpty="ANIM_TEST_NO_FAILURE_CODE">
					<UseParametersFn Name="ASOBO_Animation_Add_Transform_Helper">
						<TRANSFORM_PFN>ASOBO_Anim_Failure_Parameters</TRANSFORM_PFN>
					</UseParametersFn>
				</Condition>
				<Condition Valid="INVERT_ANIM">
					<UseParametersFn Name="ASOBO_Animation_Add_Transform_Helper">
						<TRANSFORM_PFN>ASOBO_Anim_Invert_Parameters</TRANSFORM_PFN>
					</UseParametersFn>
				</Condition>
				<Switch>
					<Case NotEmpty="REPEAT_ANIM">
						<UseParametersFn Name="ASOBO_Animation_Add_Transform_Helper">
							<TRANSFORM_PFN>ASOBO_Anim_Repeat_Parameters</TRANSFORM_PFN>
						</UseParametersFn>
					</Case>
					<Case NotEmpty="ANIM_DURATION">
						<UseParametersFn Name="ASOBO_Animation_Add_Transform_Helper">
							<TRANSFORM_PFN>ASOBO_Manual_Anim_Lag_Parameters</TRANSFORM_PFN>
						</UseParametersFn>
					</Case>
				</Switch>
			</Condition>
			<Condition NotEmpty="PFN_REGISTER_ANIM_TRANSFORM_APPLIED_LAST">
				<UseParametersFn Name="#PFN_REGISTER_ANIM_TRANSFORM_APPLIED_LAST#"/>
			</Condition>
		</Parameters>
	</ParametersFn>
	<!-- IN (opt): OUT_PARAM_NAME (Name of the param to receive the transform index value) -->
	<!-- OUT: Next safe transform index to use -->
	<ParametersFn Name="ASOBO_Animation_Get_Next_Safe_Transform_Index">
		<Parameters Type="Override">
			<LoadParameters ID="Anim_Code_Transform_Stack"/>
		</Parameters>
		<Parameters Type="Default">
			<OUT_PARAM_NAME>NEXT_SAFE_TRANSFORM_INDEX</OUT_PARAM_NAME>
		</Parameters>
		<Parameters Type="Override">
			<UseParametersFn Name="ASOBO_Increment_ID_Helper">
				<OUT_PARAM_ID_NAME>NEXT_SAFE_TRANSFORM_INDEX</OUT_PARAM_ID_NAME>
			</UseParametersFn>
		</Parameters>
		<ReturnParameters>
			<SaveParameters ID="Anim_Code_Transform_Stack" Append="Override">
				<NEXT_SAFE_TRANSFORM_INDEX>#NEXT_SAFE_TRANSFORM_INDEX#</NEXT_SAFE_TRANSFORM_INDEX>
			</SaveParameters>
			<#OUT_PARAM_NAME#>#NEXT_SAFE_TRANSFORM_INDEX#</#OUT_PARAM_NAME#>
		</ReturnParameters>
	</ParametersFn>
	<ParametersFn Name="ASOBO_Animation_Add_Transform_Helper">
		<Parameters Type="Override">
			<UseParametersFn Name="ASOBO_Animation_Get_Next_Safe_Transform_Index"/>
		</Parameters>
		<ReturnParameters>
			<SaveParameters ID="Anim_Code_Transform_Stack" Append="Default">
				<ANIM_CODE_TRANSFORM_PFN_#NEXT_SAFE_TRANSFORM_INDEX#>#TRANSFORM_PFN#</ANIM_CODE_TRANSFORM_PFN_#NEXT_SAFE_TRANSFORM_INDEX#>
			</SaveParameters>
		</ReturnParameters>
	</ParametersFn>
</ModelBehaviors>