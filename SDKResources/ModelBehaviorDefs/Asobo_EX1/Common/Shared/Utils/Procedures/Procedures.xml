<ModelBehaviors>
	<!-- ################################## PROCEDURE ################################# -->
	<!-- ############################################################################## -->
	<!-- @DOC INPUT_EVENT PROCEDURE
		@Brief Base input event for all procedures created using ASOBO_Procedure_Template
	-->
	<InputEvent ID="PROCEDURE">
		<Condition NotEmpty="TT_CATEGORY_MAIN">
			<TT_Category_Main>TT:#TT_CATEGORY_MAIN#</TT_Category_Main>
		</Condition>
		<Condition NotEmpty="TT_CATEGORY_SUB">
			<TT_Category_Sub>TT:#TT_CATEGORY_SUB#</TT_Category_Sub>
		</Condition>
		<Presets>
			<Extend Target="@BaseInputEvent"/>
		</Presets>
	</InputEvent>
	<!-- ############################################################################## -->
	<!-- @DOC FUNCTION ASOBO_Procedure_Dummy_IE_Data
		@Brief Defaults tooltip related parameters of the procedure input event
		@Return Defaulted input event parameters
	-->
	<ParametersFn Name="ASOBO_Procedure_Dummy_IE_Data">
		<Parameters Type="Override">
			<IE_TOOLTIP_DESCRIPTION>@TT_Package.STATE.NA</IE_TOOLTIP_DESCRIPTION>
			<IE_TOOLTIP_DESCRIPTION_IS_DYNAMIC>False</IE_TOOLTIP_DESCRIPTION_IS_DYNAMIC>
			<IE_TOOLTIP_VALUE>@TT_Package.STATE.NA</IE_TOOLTIP_VALUE>
			<IE_TOOLTIP_VALUE_IS_DYNAMIC>False</IE_TOOLTIP_VALUE_IS_DYNAMIC>
			<IE_TOOLTIP_IS_INOP>True</IE_TOOLTIP_IS_INOP>
		</Parameters>
		<ReturnParameters>
			<UseParametersFn Name="ASOBO_InputEvent_Base_Default_Parameters"/>
		</ReturnParameters>
	</ParametersFn>
	<!-- ############################################################################## -->
	<!-- @DOC MACRO TICK_Get_Delta_Time
		@Brief Tick delta time set every frame when using ASOBO_Tick_Every_Frame_Helper in an input event
		@Return Tick delta time (O:_DeltaTime)
	-->
	<Macro Name="TICK_Get_Delta_Time">(O:_DeltaTime)</Macro>
	<!-- @DOC FUNCTION ASOBO_Tick_Every_Frame_Helper
		@Brief Configurate an input event to make it tick every frame. Delta time is stored inside the macro TICK_Get_Delta_Time
		@Param TICK_VAR name of the tick variable
	-->
	<ParametersFn Name="ASOBO_Tick_Every_Frame_Helper">
		<Parameters Type="Default">
			<TICK_VAR>XMLVAR_#IE_PRESET_ID#_Tick</TICK_VAR>
			<TICK_VAR_SCOPE>O</TICK_VAR_SCOPE>
		</Parameters>
		<Parameters Type="Override">
			<TICK_ONCE>(#TICK_VAR_SCOPE#:#TICK_VAR#) 1 + dnor (&gt;#TICK_VAR_SCOPE#:#TICK_VAR#)</TICK_ONCE>
			<UPDATED_THIS_FRAME>(O:_LastUpdateTime) @E_SimulationTime ==</UPDATED_THIS_FRAME>
			<STORE_LAST_UPDATE_TIME>@E_SimulationTime (&gt;O:_LastUpdateTime)</STORE_LAST_UPDATE_TIME>
			<UPDATE_DELTA_TIME>@E_SimulationTime (O:_LastUpdateTime) - (&gt;O:_DeltaTime)</UPDATE_DELTA_TIME>
		</Parameters>
		<Parameters Type="Override">
			<TICK_CODE>#TICK_ONCE# #UPDATED_THIS_FRAME# if{ quit } #UPDATE_DELTA_TIME# #STORE_LAST_UPDATE_TIME#</TICK_CODE>
		</Parameters>
		<Parameters Type="Override">
			<UseParametersFn Name="ASOBO_Watch_LocalVar_Helper">
				<LOCAL_VAR>#TICK_VAR#</LOCAL_VAR>
				<VAR_SCOPE>#TICK_VAR_SCOPE#</VAR_SCOPE>
			</UseParametersFn>
			<UseParametersFn Name="ASOBO_Append_Init_Code_Helper">
				<APPEND_BEFORE>True</APPEND_BEFORE>
				<INIT_CODE>#TICK_CODE#</INIT_CODE>
			</UseParametersFn>
		</Parameters>
	</ParametersFn>
	<!-- ############################################################################## -->
	<!-- @DOC FUNCTION ASOBO_Procedure_Next_Safe_Jump_Flag_Helper
		@Brief Increment the tracked last safe jump flag id and returns it
		@Param TEMP_RPN_DATA_STORAGE Save ID where we keep track of the procedure data
		@Param OUT_PARAM_NAME Name of the parameter to store the ID in
		@Return The next safe jump flag id to use
	-->
	<ParametersFn Name="ASOBO_Procedure_Next_Safe_Jump_Flag_Helper">
		<Parameters Type="Default">
			<TEMP_RPN_DATA_STORAGE>Procedure_Init_Data</TEMP_RPN_DATA_STORAGE>
		</Parameters>
		<ReturnParameters>
			<UseParametersFn Name="ASOBO_Get_Next_Safe_Jump_Flag_Helper"/>
		</ReturnParameters>
	</ParametersFn>
	<!-- ############################################################################## -->
	<!-- @DOC FUNCTION ASOBO_Procedure_Get_Next_Safe_Var_Helper
		@Brief Increment the tracked last safe var id and returns it
		@Param TEMP_RPN_DATA_STORAGE Save ID where we keep track of the procedure data
		@Param OUT_PARAM_NAME Name of the parameter to store the ID in
		@Return The next safe var id to use
	-->
	<ParametersFn Name="ASOBO_Procedure_Get_Next_Safe_Var_Helper">
		<Parameters Type="Default">
			<TEMP_RPN_DATA_STORAGE>Procedure_Init_Data</TEMP_RPN_DATA_STORAGE>
		</Parameters>
		<ReturnParameters>
			<UseParametersFn Name="ASOBO_Get_Next_Safe_Var_Helper"/>
		</ReturnParameters>
	</ParametersFn>
	<!-- ############################################################################## -->
	<!-- @DOC FUNCTION ASOBO_Procedure_Clear_Data_Helper
		@Brief Clear the saved procedure data
		@Param TEMP_RPN_DATA_STORAGE Save ID where we keep track of the procedure data
	-->
	<ParametersFn Name="ASOBO_Procedure_Clear_Data_Helper">
		<Parameters Type="Default">
			<TEMP_RPN_DATA_STORAGE>Procedure_Init_Data</TEMP_RPN_DATA_STORAGE>
		</Parameters>
		<Parameters Type="Override">
			<RemoveSavedParameters ID="#TEMP_RPN_DATA_STORAGE#"/>
		</Parameters>
	</ParametersFn>
	<!-- ############################################################################## -->
	<!-- @DOC TEMPLATE ASOBO_Procedure_Template
		@Brief Create a procedure component
		@Param PROCEDURE_ID name of the procedure
		@Param GET_PROCEDURE_PARAMETERS Function to call to retrieve the procedure configuration
		@Param IE_PARAMS save ID used for the procedure input event data
		@Param COMPONENT_ID Name of the component the procedure input event will be created in
		@Param ON_VALUE_CHANGED init code executed when a watch var value changes, or on tick
		@Param TICK_EVERY_FRAME If true, the procedure init code will be executed every frame
	-->
	<Template Name="ASOBO_Procedure_Template">
		<Parameters Type="Default">
			<IE_NAME>#PROCEDURE_ID#</IE_NAME>
			<GET_PROCEDURE_PARAMETERS>Get_Procedure_#PROCEDURE_ID#_Parameters</GET_PROCEDURE_PARAMETERS>
		</Parameters>
		<Parameters Type="Override">
			<UseParametersFn Name="ASOBO_Get_IE_Preset_ID_Parameters_Helper">
				<IE_BASE_NAME>PROCEDURE</IE_BASE_NAME>
			</UseParametersFn>
		</Parameters>
		<Parameters Type="Default">
			<IE_PARAMS>Procedure_#IE_NAME#_Parameters</IE_PARAMS>
			<COMPONENT_ID>Procedure_#IE_NAME#</COMPONENT_ID>
		</Parameters>
		<Parameters Type="Override">
			<UseParametersFn Name="#GET_PROCEDURE_PARAMETERS#"/>
		</Parameters>
		<Parameters Type="Override">
			<SaveParameters ID="#IE_PARAMS#" Append="Default">
				<UseParametersFn Name="ASOBO_Procedure_Dummy_IE_Data"/>
			</SaveParameters>
			<Condition Check="ON_VALUE_CHANGED">
				<UseParametersFn Name="ASOBO_Append_Init_Code_Helper">
					<INIT_CODE>#ON_VALUE_CHANGED#</INIT_CODE>
				</UseParametersFn>
			</Condition>
		</Parameters>
		<Parameters Type="Override">
			<Condition Valid="TICK_EVERY_FRAME">
				<UseParametersFn Name="ASOBO_Tick_Every_Frame_Helper"/>
			</Condition>
			<UseParametersFn Name="ASOBO_Procedure_Clear_Data_Helper"/>
		</Parameters>
		<Component ID="#COMPONENT_ID#">
			<UseTemplate Name="ASOBO_InputEvent_Template">
				<LoadParameters ID="#IE_PARAMS#"/>		
			</UseTemplate>
			<UseTemplate Name="ASOBO_Process_Saved_Updates_Template"/>
		</Component>
	</Template>
	<!-- ############################################################################## -->
	<!-- ############################################################################## -->
	<!-- @DOC FUNCTION ASOBO_Get_Procedure_Interpolate_Over_Time_Parameters
		@Brief Setup a procedure that will interpolate between two values over time
		@Param MIN_VALUE Lower output value
		@Param MAX_VALUE Upper output value
		@Param MIN_TO_MAX_SECONDS Time to transition "up" from MIN_VALUE to MAX_VALUE
		@Param MAX_TO_MIN_SECONDS Time to transition "down" from MAX_VALUE to MIN_VALUE
		@Param GET_TARGET_VALUE Code to get the value we must transition toward
		@Param SET_VALUE Code to set an output value
	-->
	<ParametersFn Name="ASOBO_Get_Procedure_Interpolate_Over_Time_Parameters">
		<Parameters Type="Default">
			<MIN_VALUE>0</MIN_VALUE>
			<MAX_VALUE>1</MAX_VALUE>
			<MIN_TO_MAX_SECONDS>0.1</MIN_TO_MAX_SECONDS>
			<MAX_TO_MIN_SECONDS>0.1</MAX_TO_MIN_SECONDS>
			<GET_TARGET_VALUE>(O:XMLVAR_Target_Value)</GET_TARGET_VALUE>
			<SET_VALUE></SET_VALUE>
		</Parameters>
		<Parameters Type="Default">
			<GET_CURRENT_VALUE>(O:XMLVAR_Current_Value)</GET_CURRENT_VALUE>
			<SET_CURRENT_VALUE>(&gt;O:XMLVAR_Current_Value)</SET_CURRENT_VALUE>
			<INCREASING_SPEED>#MAX_VALUE# #MIN_VALUE# - #MIN_TO_MAX_SECONDS# /</INCREASING_SPEED>
			<DECREASING_SPEED>#MIN_VALUE# #MAX_VALUE# - #MAX_TO_MIN_SECONDS# /</DECREASING_SPEED>
		</Parameters>
		<Parameters Type="Override">
			<SPEED>#GET_CURRENT_VALUE# #GET_TARGET_VALUE# &gt; if{ #DECREASING_SPEED# } els{ #GET_CURRENT_VALUE# #GET_TARGET_VALUE# &lt; if{ #INCREASING_SPEED# } els{ 0 } }</SPEED>
		</Parameters>
		<Parameters Type="Override">
			<UPDATE>#SPEED# @E_SimulationDeltaTime * #GET_CURRENT_VALUE# + #MAX_VALUE# min #MIN_VALUE# max #SET_CURRENT_VALUE#</UPDATE>
		</Parameters>
		<ReturnParameters>
			<TICK_EVERY_FRAME>True</TICK_EVERY_FRAME>
			<UseParametersFn Name="ASOBO_Append_Init_Code_Helper">
				<INIT_CODE>#UPDATE# #GET_CURRENT_VALUE# #SET_VALUE#</INIT_CODE>
			</UseParametersFn>
		</ReturnParameters>
	</ParametersFn>
	<!-- ############################################################################## -->
</ModelBehaviors>