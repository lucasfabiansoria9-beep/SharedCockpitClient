<ModelBehaviors>
	<Include RelativeFile="..\\Generic.xml"/>
	<Include RelativeFile="Inputs\\AS1000_Inputs.xml"/>

<!-- ############################################################## -->
<!-- AS1000 generic templates ##################################### -->
<!-- ############################################################## -->

<!-- 
	Knob with a push template for AS1000 (for convenience of sound events) (do not call directly) 
-->
<Template Name="ASOBO_AS1000_Push_Event_Only_Template">
	<Parameters Type="Override">
		<UseParametersFn Name="Compute_First_Available_Bindings">
		</UseParametersFn>
	</Parameters>
	<UseInputEvent ID="AS1000">
		<BINDING_INC_#FIRST_AVAILABLE_INC_BINDING#>Push</BINDING_INC_#FIRST_AVAILABLE_INC_BINDING#>
		<BINDING_INC_#FIRST_AVAILABLE_INC_BINDING#_PARAM_0>1</BINDING_INC_#FIRST_AVAILABLE_INC_BINDING#_PARAM_0>
		<TT_INTERACTION>PRIMARY_DOWN+SECONDARY_DOWN</TT_INTERACTION>
		<TT_INTERACTION_LOCKABLE>PRIMARY_DOWN</TT_INTERACTION_LOCKABLE>
		<ANIM_VAR>_PushAnimVar</ANIM_VAR>
		<ANIM>HOLD</ANIM>
	</UseInputEvent>
</Template>
<Template Name="ASOBO_AS1000_Knob_Template">
	<Parameters Type="Override">
		<Condition Valid="BTN_ID_EXTERNAL">
			<True>
				<TEMPLATE_VARIANT>_Push</TEMPLATE_VARIANT>
			</True>
			<False>
				<TEMPLATE_VARIANT/>
			</False>
		</Condition>
		<CURSOR_LEFT>TurnLeftSmall</CURSOR_LEFT>
		<CURSOR_RIGHT>TurnRightSmall</CURSOR_RIGHT>
	</Parameters>
	<Parameters Type="Default">
		<Condition Valid="BTN_ID_EXTERNAL">
			<True>
				<WWISE_EVENT>as3000_knob_turn</WWISE_EVENT>
				<WWISE_EVENT_1>as3000_knob_push_button_on</WWISE_EVENT_1>  
				<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
				<WWISE_EVENT_2>as3000_knob_push_button_off</WWISE_EVENT_2> 
				<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>	
			</True>
			<False>
				<WWISE_EVENT>as3000_big_knob_turn</WWISE_EVENT>
			</False>
		</Condition>
		<COUNT>36</COUNT>
		<Condition Valid="TOOLTIP_TITLE">
			<TOOLTIP_ENTRY_0>AS1000_#KNOB_ID#</TOOLTIP_ENTRY_0>	
			<Condition Valid="BTN_ID_EXTERNAL">
				<TOOLTIP_ENTRY_1>AS1000_#BTN_ID_EXTERNAL#</TOOLTIP_ENTRY_1>
			</Condition>
		</Condition>
	</Parameters>
	<Parameters Type="Override">
		<Condition Valid="BTN_ID_EXTERNAL">
			<LEFT_SINGLE_CODE>(&gt;B:AS1000_#BTN_ID_EXTERNAL#_Push)</LEFT_SINGLE_CODE>
		</Condition>
		<CLOCKWISE_CODE>1 (&gt;B:AS1000_#KNOB_ID#_Inc)</CLOCKWISE_CODE>
		<ANTICLOCKWISE_CODE>1 (&gt;B:AS1000_#KNOB_ID#_Dec)</ANTICLOCKWISE_CODE>
	</Parameters>
	<UseInputEvent ID="AS1000"/>
	<UseTemplate Name="ASOBO_GT_Knob_Infinite#TEMPLATE_VARIANT#">
		<ANIM_VAR_HANDLED_SEPARATELY>True</ANIM_VAR_HANDLED_SEPARATELY>
	</UseTemplate>
</Template>
<Template Name="ASOBO_AS1000_Joystick_Template">
	<Parameters Type="Default">
		<ANIM_NAME_L_R>#AS1000#_Joystick_Range_L_R#SUFFIX_ID#</ANIM_NAME_L_R>
		<ANIM_NAME_DN_UP>#AS1000#_Joystick_Range_DN_UP#SUFFIX_ID#</ANIM_NAME_DN_UP>
		<ANIM_NAME_KNOB>#AS1000#_Joystick_Range_Knob#SUFFIX_ID#</ANIM_NAME_KNOB>
		<ANIM_NAME_PUSH>#AS1000#_Joystick_Range_Push#SUFFIX_ID#</ANIM_NAME_PUSH>
		<VAR_NAME>#AS1000#_Joystick_Range_#ID#_Interacting</VAR_NAME>
		<NODE_ID>#AS1000#_Joystick_Range_Knob#SUFFIX_ID#</NODE_ID>
		<PAN_NODE_ID>#AS1000#_Joystick_Range_Pan#SUFFIX_ID#</PAN_NODE_ID>
		<PAN_UPDATE_FREQUENCY>5</PAN_UPDATE_FREQUENCY>
	</Parameters>
	<Parameters Type="Override">
		<KNOB_X_ID>#FUNCTION#_#FUNCTION_ID#_Range_Pan_X</KNOB_X_ID>
		<KNOB_Y_ID>#FUNCTION#_#FUNCTION_ID#_Range_Pan_Y</KNOB_Y_ID>
		<KNOB_ZOOM_ID>#FUNCTION#_#FUNCTION_ID#_Range_Zoom</KNOB_ZOOM_ID>
		<BTN_ID_CURSOR>#FUNCTION#_#FUNCTION_ID#_Range_Cursor</BTN_ID_CURSOR>
	</Parameters>
	<Parameters Type="Override">
		<JOYSTICK_X_CODE_LEFT>1 (&gt;B:AS1000_#KNOB_X_ID#_Left)</JOYSTICK_X_CODE_LEFT>
		<JOYSTICK_X_CODE_RIGHT>1 (&gt;B:AS1000_#KNOB_X_ID#_Right)</JOYSTICK_X_CODE_RIGHT>
		<JOYSTICK_Y_CODE_DOWN>1 (&gt;B:AS1000_#KNOB_Y_ID#_Down)</JOYSTICK_Y_CODE_DOWN>
		<JOYSTICK_Y_CODE_UP>1 (&gt;B:AS1000_#KNOB_Y_ID#_Up)</JOYSTICK_Y_CODE_UP>
		<WHEEL_UP_CODE>(&gt;B:AS1000_#KNOB_ZOOM_ID#_Out)</WHEEL_UP_CODE>
		<WHEEL_DOWN_CODE>(&gt;B:AS1000_#KNOB_ZOOM_ID#_In)</WHEEL_DOWN_CODE>
		<LEFT_SINGLE_CODE_DEFAULT_IM>(&gt;B:AS1000_#BTN_ID_CURSOR#_Push) </LEFT_SINGLE_CODE_DEFAULT_IM>
	</Parameters>
	<Component ID="#NODE_ID#" Node="#NODE_ID#">
		<Parameters Type="Override">
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_JOYSTICK_RANGE_KNOB_TITLE</TOOLTIP_TITLE>
			<TOOLTIP_ENTRY_0>AS1000_#KNOB_X_ID#</TOOLTIP_ENTRY_0>
			<TOOLTIP_ENTRY_1>AS1000_#KNOB_Y_ID#</TOOLTIP_ENTRY_1>
			<TOOLTIP_ENTRY_2>AS1000_#KNOB_ZOOM_ID#</TOOLTIP_ENTRY_2>
			<TOOLTIP_ENTRY_3>AS1000_#BTN_ID_CURSOR#</TOOLTIP_ENTRY_3>
		</Parameters>
		<UseInputEvent ID="AS1000">
			<KNOB_ID>#KNOB_X_ID#</KNOB_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_JOYSTICK_RANGE_PAN_X_ACTION</TT_DESCRIPTION_ID>
			<TT_ICON>MOVE_AXIS</TT_ICON>
			<SET_STATE_EXTERNAL>p0 0 &gt; if{ (&gt;H:#KEY_PREFIX#_JOYSTICK_RIGHT) } els{ (&gt;H:#KEY_PREFIX#_JOYSTICK_LEFT) }</SET_STATE_EXTERNAL>
			<BINDING_INC_0>Right</BINDING_INC_0>
			<BINDING_INC_0_PARAM_0>1</BINDING_INC_0_PARAM_0>
			<BINDING_DEC_0>Left</BINDING_DEC_0>
			<BINDING_DEC_0_PARAM_0>1</BINDING_DEC_0_PARAM_0>
			<NO_ANIM_VAR_UPDATE>True</NO_ANIM_VAR_UPDATE>
		</UseInputEvent>
		<UseInputEvent ID="AS1000">
			<KNOB_ID>#KNOB_Y_ID#</KNOB_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_JOYSTICK_RANGE_PAN_Y_ACTION</TT_DESCRIPTION_ID>
			<TT_ICON>MOVE_AXIS</TT_ICON>
			<TT_INTERACTION>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION>
			<TT_INTERACTION_LOCKABLE>Y_AXIS</TT_INTERACTION_LOCKABLE>
			<SET_STATE_EXTERNAL>p0 0 &gt; if{ (&gt;H:#KEY_PREFIX#_JOYSTICK_UP) } els{ (&gt;H:#KEY_PREFIX#_JOYSTICK_DOWN) }</SET_STATE_EXTERNAL>
			<BINDING_INC_0>Up</BINDING_INC_0>
			<BINDING_INC_0_PARAM_0>1</BINDING_INC_0_PARAM_0>
			<BINDING_DEC_0>Down</BINDING_DEC_0>
			<BINDING_DEC_0_PARAM_0>1</BINDING_DEC_0_PARAM_0>
			<NO_ANIM_VAR_UPDATE>True</NO_ANIM_VAR_UPDATE>
		</UseInputEvent>
		<UseInputEvent ID="AS1000">
			<KNOB_ID>#KNOB_ZOOM_ID#</KNOB_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_JOYSTICK_RANGE_KNOB_ACTION</TT_DESCRIPTION_ID>
			<TT_INTERACTION>PRIMARY_DOWN+INCREASE+DECREASE</TT_INTERACTION>
			<TT_INTERACTION_LOCKABLE>INCREASE+DECREASE</TT_INTERACTION_LOCKABLE>
			<SET_STATE_EXTERNAL>p0 0 &gt; if{ (&gt;H:#KEY_PREFIX#_RANGE_INC) } els{ (&gt;H:#KEY_PREFIX#_RANGE_DEC) }</SET_STATE_EXTERNAL>
			<BINDING_INC_0>Out</BINDING_INC_0>
			<BINDING_INC_0_PARAM_0>1</BINDING_INC_0_PARAM_0>
			<BINDING_INC_0_EVENT_ID>G1000_#FUNCTION#_ZOOMOUT_BUTTON</BINDING_INC_0_EVENT_ID>
			<BINDING_DEC_0>In</BINDING_DEC_0>
			<BINDING_DEC_0_PARAM_0>1</BINDING_DEC_0_PARAM_0>
			<BINDING_DEC_0_EVENT_ID>G1000_#FUNCTION#_ZOOMIN_BUTTON</BINDING_DEC_0_EVENT_ID>
			<TT_VALUE>(L:#FUNCTION#_InnerMap_MapZoomRange) '%dnm' @sprintf</TT_VALUE>
			<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
		</UseInputEvent>
		<UseTemplate Name="ASOBO_AS1000_Push_Event_Only_Template">
			<BTN_ID>#BTN_ID_CURSOR#</BTN_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_JOYSTICK_RANGE_KNOB_ACTION_SET</TT_DESCRIPTION_ID>
			<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_JOYSTICK_PUSH)</SET_STATE_EXTERNAL>
			<BINDING_INC_0_EVENT_ID>G1000_#FUNCTION#_CURSOR_BUTTON</BINDING_INC_0_EVENT_ID>
			<GET_STATE_EXTERNAL>(L:#FUNCTION#_InnerMap_MapShowCursor) sp0</GET_STATE_EXTERNAL>
			<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Joystick_Interaction_Knob">	
			<!-- Spacial case for DRAG_IM to condense inputs to only one node -->
			<UPDATE_FREQUENCY>20</UPDATE_FREQUENCY>
			<ADDITIONAL_EVENT_HANDLING>(M:Event) 'LeftSingle' 'RightSingle' (M:InputType) 1 == ? scmi 0 == if{ (&gt;B:AS1000_#BTN_ID_CURSOR#_Push) quit }</ADDITIONAL_EVENT_HANDLING>
			<MOUSEFLAGS_DRAG_IM>RightSingle+LeftAll+Wheel+Lock+Unlock</MOUSEFLAGS_DRAG_IM>
			<COUNT>18</COUNT>
			<WWISE_EVENT_1>as3000_knob_push_button_on</WWISE_EVENT_1>
			<WWISE_EVENT_2>as3000_knob_push_button_off</WWISE_EVENT_2>
			<WWISE_EVENT>as3000_knob_turn</WWISE_EVENT>	
			<WWISE_JOYSTICK_EVENT_L>as3000_joystick</WWISE_JOYSTICK_EVENT_L>
			<WWISE_JOYSTICK_EVENT_R>as3000_joystick</WWISE_JOYSTICK_EVENT_R >	
			<WWISE_JOYSTICK_EVENT_UP>as3000_joystick</WWISE_JOYSTICK_EVENT_UP>
			<WWISE_JOYSTICK_EVENT_DN>as3000_joystick</WWISE_JOYSTICK_EVENT_DN>
		</UseTemplate>
	</Component>
	<Component ID="#PAN_NODE_ID#" Node="#PAN_NODE_ID#">
		<!-- Backward compatibility IM_DEFAULT -->
		<UseTemplate Name="ASOBO_GT_Joystick_Interaction_Pan">
			<WWISE_JOYSTICK_EVENT_L>as3000_joystick</WWISE_JOYSTICK_EVENT_L>
			<WWISE_JOYSTICK_EVENT_R>as3000_joystick</WWISE_JOYSTICK_EVENT_R >	
			<WWISE_JOYSTICK_EVENT_UP>as3000_joystick</WWISE_JOYSTICK_EVENT_UP>
			<WWISE_JOYSTICK_EVENT_DN>as3000_joystick</WWISE_JOYSTICK_EVENT_DN>
			<UPDATE_FREQUENCY>#PAN_UPDATE_FREQUENCY#</UPDATE_FREQUENCY>
		</UseTemplate>
	</Component>
</Template>
<!-- 
	Push template for AS1000 (for convenience of sound events) (do not call directly) 
-->
<Template Name="ASOBO_AS1000_Push_Button_Template">
	<Parameters Type="Default">
		<PART_ID>#ANIM_NAME#</PART_ID>
		<EXTRA_OPTION/>
		<Condition NotEmpty="GET_STATE_EXTERNAL">
			<True>
				<LEFT_SINGLE_CODE>(&gt;B:AS1000_#BTN_ID#_Toggle)</LEFT_SINGLE_CODE>
			</True>
			<False>
				<LEFT_SINGLE_CODE>(&gt;B:AS1000_#BTN_ID#_Push)</LEFT_SINGLE_CODE>
				<BINDING_INC_0>Push</BINDING_INC_0>
				<BINDING_INC_0_PARAM_0>1</BINDING_INC_0_PARAM_0>
				<Condition NotEmpty="EVENT_ID">
					<BINDING_INC_0_EVENT_ID>#EVENT_ID#</BINDING_INC_0_EVENT_ID>					
				</Condition>
				<BINDING_DEC_0>Release</BINDING_DEC_0>
				<BINDING_DEC_0_PARAM_0>0</BINDING_DEC_0_PARAM_0>
			</False>
		</Condition>
		<Condition Valid="TOOLTIP_TITLE">
			<TOOLTIP_ENTRY_0>AS1000_#BTN_ID#</TOOLTIP_ENTRY_0>	
		</Condition>
	</Parameters>
	<Condition Valid="IS_INOP">
		<True>
			<UseTemplate Name="ASOBO_GT_Interaction_NoInteraction">
				<TOOLTIP_TITLE/>
				<TOOLTIP_TITLE_ID/>
				<TOOLTIPID>TT:COCKPIT.TOOLTIPS.INOP</TOOLTIPID>
			</UseTemplate>
		</True>
		<False>
			<UseInputEvent ID="AS1000"/>
			<UseTemplate Name="ASOBO_GT_Push_Button#EXTRA_OPTION#">
				<WWISE_EVENT_1>as3000_push_button_on</WWISE_EVENT_1>  
				<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
				<WWISE_EVENT_2>as3000_push_button_off</WWISE_EVENT_2> 
				<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>	
			</UseTemplate>
		</False>
	</Condition>
	<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
</Template>
<Template Name="ASOBO_AS1000_Push_Button_With_Indicator_Template">
	<DefaultTemplateParameters>
		<PART_ID>#NODE_ID#</PART_ID>
		<EXTRA_OPTION></EXTRA_OPTION>
		<Condition NotEmpty="GET_STATE_EXTERNAL">
			<True>
				<LEFT_SINGLE_CODE>(&gt;B:AS1000_#BTN_ID#_Toggle)</LEFT_SINGLE_CODE>
			</True>
			<False>
				<LEFT_SINGLE_CODE>(&gt;B:AS1000_#BTN_ID#_Push)</LEFT_SINGLE_CODE>
				<BINDING_INC_0>Push</BINDING_INC_0>
				<BINDING_INC_0_PARAM_0>1</BINDING_INC_0_PARAM_0>
				<BINDING_DEC_0>Release</BINDING_DEC_0>
				<BINDING_DEC_0_PARAM_0>0</BINDING_DEC_0_PARAM_0>
			</False>
		</Condition>
		<Condition Valid="TOOLTIP_TITLE">
			<TOOLTIP_ENTRY_0>AS1000_#BTN_ID#</TOOLTIP_ENTRY_0>
		</Condition>
		<INDICATOR_NODE_ID>#NODE_ID#_Active</INDICATOR_NODE_ID>
		<Condition Check="DUMMY">
			<Condition Check="DISABLED">
				<True>
					<COND_INDICATOR_ACTIVE>0</COND_INDICATOR_ACTIVE>
				</True>
				<False>
					<COND_INDICATOR_ACTIVE>(I:#NODE_ID#_Active)</COND_INDICATOR_ACTIVE>
				</False>
			</Condition>
		</Condition>
	</DefaultTemplateParameters>
	<Component ID="#NODE_ID#_#ID#" Node="#NODE_ID#">
		<UseInputEvent ID="AS1000"/>
		<UseTemplate Name="ASOBO_GT_Push_Button#EXTRA_OPTION#">
			<WWISE_EVENT_1>as3000_push_button_on</WWISE_EVENT_1>  
			<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
			<WWISE_EVENT_2>as3000_push_button_off</WWISE_EVENT_2> 
			<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>	
			<Condition Check="DUMMY">
				<Condition Check="DISABLED">
					<False>
						<LEFT_SINGLE_CODE>
							(I:#NODE_ID#_Active) ! (&gt;I:#NODE_ID#_Active)
							#LEFT_SINGLE_CODE#
						</LEFT_SINGLE_CODE>
					</False>
				</Condition>
			</Condition>			
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
	</Component>
	<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
			<EMISSIVE_CODE>#COND_INDICATOR_ACTIVE#</EMISSIVE_CODE>
		</UseTemplate>
	</Component>
</Template>

<!-- 
	Softkeys (do not call directly) 
-->
<Template Name="ASOBO_AS1000_Softkey_Template">
	<Parameters Type="Default">
		<PREFIX>#AS1000#_#DISPLAY#</PREFIX>
		<WWISE_EVENT_1>as3000_push_button_on</WWISE_EVENT_1>  
		<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
		<WWISE_EVENT_2>as3000_push_button_off</WWISE_EVENT_2> 
		<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>	
	</Parameters>
	<Parameters Type="Default">
		<NODE_ID>#PREFIX#_Push_Softkey_#KEY_ID##SUFFIX_ID#</NODE_ID>
		<ANIM_NAME>#PREFIX#_Push_Softkey_#KEY_ID##SUFFIX_ID#</ANIM_NAME>
		<PART_ID>#KEY_PREFIX#_Push_Softkey_#KEY_ID#</PART_ID>
		<BTN_ID>#FUNCTION#_#FUNCTION_ID#_Softkey_#KEY_ID#</BTN_ID>
		<EVENT_ID>G1000_#FUNCTION#_SOFTKEY#KEY_ID#</EVENT_ID>
	</Parameters>
	<Parameters Type="Override">
		<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_PUSH_SOFTKEY_TITLE</TOOLTIP_TITLE>
		<TOOLTIP_ENTRY_0>AS1000_#BTN_ID#</TOOLTIP_ENTRY_0>
		<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_PUSH_SOFTKEY_ACTION</TT_DESCRIPTION_ID>
		<TT_DESCRIPTION_INDEX>'#KEY_ID#'</TT_DESCRIPTION_INDEX>
	</Parameters>
	<Component ID="#NODE_ID#_#ID#" Node="#NODE_ID#">
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
		<UseInputEvent ID="AS1000">
			<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_SOFTKEYS_#KEY_ID#)</SET_STATE_EXTERNAL>
			<BINDING_INC_0>Push</BINDING_INC_0>
			<BINDING_INC_0_PARAM_0>1</BINDING_INC_0_PARAM_0>
			<Condition NotEmpty="EVENT_ID">
				<BINDING_INC_0_EVENT_ID>#EVENT_ID#</BINDING_INC_0_EVENT_ID>					
			</Condition>
		</UseInputEvent>
		<UseTemplate Name="ASOBO_GT_Push_Button">
			<LEFT_SINGLE_CODE>(&gt;B:AS1000_#BTN_ID#_Push)</LEFT_SINGLE_CODE>
		</UseTemplate>
	</Component>
</Template>
<Template Name="ASOBO_AS1000_X_Softkeys_Template">
	<Loop>
		<Setup>
			<Param>KEY_ID</Param>
			<From>1</From>
			<To>#SOFTKEYS_COUNT#</To>
		</Setup>
		<Do>
			<UseTemplate Name="ASOBO_AS1000_Softkey_Template"/>
		</Do>
	</Loop>
</Template>

<Template Name="ASOBO_AS1000_Push_Autopilot_Nose_Template">
	<Parameters Type="Default">
		<Switch Param="DIRECTION">
			<Case Value="UP">
				<VS_CODE>(A:AUTOPILOT VERTICAL HOLD, Bool) if{ (&gt;K:AP_VS_VAR_INC) (&gt;H:AP_DN) }</VS_CODE>
				<FLC_CODE>(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ (&gt;K:AP_SPD_VAR_DEC) }</FLC_CODE>
				<FD_CODE>(A:AUTOPILOT PITCH HOLD, Bool) if{ (&gt;K:AP_PITCH_REF_INC_UP) }</FD_CODE>
			</Case>
			<Case Value="DN">
				<VS_CODE>(A:AUTOPILOT VERTICAL HOLD, Bool) if{ (&gt;K:AP_VS_VAR_DEC) (&gt;H:AP_UP) }</VS_CODE>
				<FLC_CODE>(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ (&gt;K:AP_SPD_VAR_INC) }</FLC_CODE>
				<FD_CODE>(A:AUTOPILOT PITCH HOLD, Bool) if{ (&gt;K:AP_PITCH_REF_INC_DN) }</FD_CODE>
			</Case>
		</Switch>
		<EXTRA_OPTION>_Emissive</EXTRA_OPTION>
	</Parameters>
	<UseTemplate Name="ASOBO_AUTOPILOT_Push_VerticalSpeed_Direction_Template">
		<SET_STATE_EXTERNAL>#VS_CODE# #FLC_CODE# #FD_CODE#</SET_STATE_EXTERNAL>
		<NO_INDICATOR>True</NO_INDICATOR>
		<EMISSIVE_NODE_ID>#NODE_ID#</EMISSIVE_NODE_ID>
		<BUTTON_EMISSIVE>False</BUTTON_EMISSIVE>
	</UseTemplate>
</Template>

<Template Name="ASOBO_AS1000_Common_Buttons_Template">
	<Parameters Type="Default">
		<Condition Valid="NO_DISPLAY_IN_NODE_ID">
			<True>
				<BASE_BTN_ID>#AS1000#</BASE_BTN_ID>				
			</True>
			<False>
				<BASE_BTN_ID>#AS1000#_#DISPLAY#</BASE_BTN_ID>	
			</False>
		</Condition>
	</Parameters>
	<Component ID="#BASE_BTN_ID#_Push_DirectTo_#ID#" Node="#BASE_BTN_ID#_Push_DirectTo#SUFFIX_ID#">
		<UseTemplate Name="ASOBO_AS1000_Push_Button_Template">
			<ANIM_NAME>#BASE_BTN_ID#_Push_DirectTo#SUFFIX_ID#</ANIM_NAME>
			<PART_ID>#AS1000#_#FUNCTION#_Push_DirectTo#SUFFIX_ID#</PART_ID>
			<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_DIRECTTO)</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_PUSH_DIRECTTO_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_PUSH_DIRECTTO_TITLE</TOOLTIP_TITLE>
			<BTN_ID>#FUNCTION#_#FUNCTION_ID#_DirectTo</BTN_ID>
			<EVENT_ID>G1000_#FUNCTION#_DIRECTTO_BUTTON</EVENT_ID>
		</UseTemplate>
	</Component>
	<Component ID="#BASE_BTN_ID#_Push_Enter_#ID#" Node="#BASE_BTN_ID#_Push_Enter#SUFFIX_ID#">
		<UseTemplate Name="ASOBO_AS1000_Push_Button_Template">
			<ANIM_NAME>#BASE_BTN_ID#_Push_Enter#SUFFIX_ID#</ANIM_NAME>
			<PART_ID>#AS1000#_#FUNCTION#_Push_Enter#SUFFIX_ID#</PART_ID>
			<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_ENT_Push)</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_PUSH_ENTER_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_PUSH_ENTER_TITLE</TOOLTIP_TITLE>
			<BTN_ID>#FUNCTION#_#FUNCTION_ID#_Enter</BTN_ID>
			<EVENT_ID>G1000_#FUNCTION#_ENTER_BUTTON</EVENT_ID>
		</UseTemplate>
	</Component>
	<Component ID="#BASE_BTN_ID#_Push_Clear_#ID#" Node="#BASE_BTN_ID#_Push_Clear#SUFFIX_ID#">
		<Parameters Type="Override">
			<BTN_ID>#FUNCTION#_#FUNCTION_ID#_Clear</BTN_ID>
			<EVENT_ID>G1000_#FUNCTION#_CLEAR_BUTTON</EVENT_ID>
			<LONG_CLICK_TIME>2</LONG_CLICK_TIME>
		</Parameters>
		<UseTemplate Name="ASOBO_AS1000_Push_Button_Template">
			<EXTRA_OPTION>_Timed</EXTRA_OPTION>
			<ANIM>HOLD</ANIM>
			<ANIM_NAME>#BASE_BTN_ID#_Push_Clear#SUFFIX_ID#</ANIM_NAME>
			<PART_ID>#AS1000#_#FUNCTION#_Push_Clear#SUFFIX_ID#</PART_ID>
			<!-- Configure event processing -->
			<SET_ARG_COUNT>2</SET_ARG_COUNT><!-- p0: Press/Release, p1:PressDuration, 0 = infinite (if pressing) -->
			<SET_STATE_EXTERNAL>p0 sp0
				l0 0 == if{ (E:SIMULATION TIME, second) (O:_PressTime) - #LONG_CLICK_TIME# &lt; if{ (&gt;H:#KEY_PREFIX#_CLR) } els{ (&gt;H:#KEY_PREFIX#_CLR_Long) 0 (&gt;O:_PressTime) } }
				l0 1 == if{ (E:SIMULATION TIME, second) (&gt;O:_PressTime) p1 (&gt;O:_PressForDuration) }
			</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_PUSH_CLEAR_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_PUSH_CLEAR_TITLE</TOOLTIP_TITLE>
			<!-- Configure binding for longpress event -->
			<BINDING_SET_0>Push_Long</BINDING_SET_0>
			<BINDING_SET_0_PARAM_0>1</BINDING_SET_0_PARAM_0>
			<BINDING_SET_0_PARAM_1>#LONG_CLICK_TIME#</BINDING_SET_0_PARAM_1>
			<!-- Simply push/release the button -->
			<LEFT_SINGLE_CODE>(&gt;B:AS1000_#BTN_ID#_Push)</LEFT_SINGLE_CODE>
			<SHORT_CLICK_CODE>(&gt;B:AS1000_#BTN_ID#_Release)</SHORT_CLICK_CODE>
			<LONG_CLICK_CODE>(&gt;B:AS1000_#BTN_ID#_Release)</LONG_CLICK_CODE>
		</UseTemplate>
	</Component>
	<Condition Valid="NO_MENU">
		<False>
			<Component ID="#BASE_BTN_ID#_Push_Menu_#ID#" Node="#BASE_BTN_ID#_Push_Menu#SUFFIX_ID#">
				<UseTemplate Name="ASOBO_AS1000_Push_Button_Template">
					<ANIM_NAME>#BASE_BTN_ID#_Push_Menu#SUFFIX_ID#</ANIM_NAME>
					<PART_ID>#AS1000#_#FUNCTION#_Push_Menu#SUFFIX_ID#</PART_ID>
					<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_MENU_Push)</SET_STATE_EXTERNAL>
					<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_PUSH_MENU_ACTION</TT_DESCRIPTION_ID>
					<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_PUSH_MENU_TITLE</TOOLTIP_TITLE>
					<BTN_ID>#FUNCTION#_#FUNCTION_ID#_Menu</BTN_ID>
					<EVENT_ID>G1000_#FUNCTION#_MENU_BUTTON</EVENT_ID>
				</UseTemplate>
			</Component>
		</False>
	</Condition>
	<Component ID="#BASE_BTN_ID#_Push_FlightPlan_#ID#" Node="#BASE_BTN_ID#_Push_FlightPlan#SUFFIX_ID#">
		<UseTemplate Name="ASOBO_AS1000_Push_Button_Template">
			<ANIM_NAME>#BASE_BTN_ID#_Push_FlightPlan#SUFFIX_ID#</ANIM_NAME>
			<PART_ID>#AS1000#_#FUNCTION#_Push_FlightPlan#SUFFIX_ID#</PART_ID>
			<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_FPL_Push)</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_PUSH_FLIGHTPLAN_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_PUSH_FLIGHTPLAN_TITLE</TOOLTIP_TITLE>
			<BTN_ID>#FUNCTION#_#FUNCTION_ID#_FlightPlan</BTN_ID>
			<EVENT_ID>G1000_#FUNCTION#_FLIGHTPLAN_BUTTON</EVENT_ID>
		</UseTemplate>
	</Component>
	<Component ID="#BASE_BTN_ID#_Push_Procedure_#ID#" Node="#BASE_BTN_ID#_Push_Procedure#SUFFIX_ID#">
		<UseTemplate Name="ASOBO_AS1000_Push_Button_Template">
			<ANIM_NAME>#BASE_BTN_ID#_Push_Procedure#SUFFIX_ID#</ANIM_NAME>
			<PART_ID>#AS1000#_#FUNCTION#_Push_Procedure#SUFFIX_ID#</PART_ID>
			<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_PROC_Push)</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_PUSH_PROCEDURES_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_PUSH_PROCEDURES_TITLE</TOOLTIP_TITLE>
			<BTN_ID>#FUNCTION#_#FUNCTION_ID#_Procedure</BTN_ID>
			<EVENT_ID>G1000_#FUNCTION#_PROCEDURE_BUTTON</EVENT_ID>
		</UseTemplate>
	</Component>
</Template>

<!-- AS1000 simplified control panel with: (Baro + Range) + (Clear + DirectTo + Enter + FlightPlan + Procedures)-->
<Template Name="ASOBO_AS1000_Detached_Control_Panel_Template">
	<Parameters Type="Default">
		<AS1000>AS1000</AS1000>
		<DISPLAY>PFD</DISPLAY>
		<ID>1</ID>
		<MIN_EMISSIVE_PERCENT>0.02</MIN_EMISSIVE_PERCENT>
		<MAX_EMISSIVE_PERCENT>1</MAX_EMISSIVE_PERCENT>
		<POTENTIOMETER>30</POTENTIOMETER>
		<Condition IsVersion="2">
			<True>
				<LIGHT_DIMMING_SCALE>1</LIGHT_DIMMING_SCALE>
			</True>
			<False>
				<LIGHT_DIMMING_SCALE>0.3</LIGHT_DIMMING_SCALE>
			</False>
		</Condition>
		<ANIM_NEVER_FAILS/>
	</Parameters>
	<UseTemplate Name="ASOBO_GT_Helper_Suffix_ID_Appender">
		<TEMPLATE_TO_CALL>ASOBO_AS1000_Detached_Control_Panel_SubTemplate</TEMPLATE_TO_CALL>
		<Switch>
			<Case Check="SIMVAR_POWER_SETTING">
				<GET_POTENTIOMETER>(A:#SIMVAR_POWER_SETTING#, Percent over 100)</GET_POTENTIOMETER>
			</Case>
			<Default>
				<GET_POTENTIOMETER>(A:LIGHT POTENTIOMETER:#POTENTIOMETER#, Percent over 100)</GET_POTENTIOMETER>
			</Default>
		</Switch>
	</UseTemplate>
</Template>
<Template Name="ASOBO_AS1000_Detached_Control_Panel_SubTemplate">
	<Parameters Type="Default">
		<KEY_PREFIX>#AS1000#_#DISPLAY#</KEY_PREFIX>
		<Condition Check="CIRCUIT_ID">
			<True>
				<FAILURE>(A:CIRCUIT ON:#CIRCUIT_ID#, Bool)</FAILURE>
			</True>
			<False>
				<FAILURE>(A:CIRCUIT GENERAL PANEL ON, Bool)</FAILURE>
			</False>
		</Condition>
		<EMISSIVE_CODE>#GET_POTENTIOMETER# #LIGHT_DIMMING_SCALE# * #MAX_EMISSIVE_PERCENT# #MIN_EMISSIVE_PERCENT# - * #MIN_EMISSIVE_PERCENT# +</EMISSIVE_CODE>
		<BARO_ID>1</BARO_ID>
		<FUNCTION>Control_Panel</FUNCTION>
		<FUNCTION_ID>#ID#</FUNCTION_ID>
	</Parameters>
	<Parameters Type="Default">
		<RANGE_KEY_PREFIX>#KEY_PREFIX#</RANGE_KEY_PREFIX>
	</Parameters>
	<Parameters Type="Override">
		<Condition Valid="INCLUDE_DISPLAY_NAME_IN_NODE_ID">
			<AS1000>#AS1000#_#DISPLAY#</AS1000>
		</Condition>
	</Parameters>
	<Component ID="#AS1000#_Control_Panel_#ID#">
		<!-- CRS/BARO -->
		<Component ID="#AS1000#_Knob_Baro#SUFFIX_ID#" Node="#AS1000#_Knob_Baro#SUFFIX_ID#">
			<Parameters Type="Override">
				<KNOB_ID>#FUNCTION#_#ID#_Baro</KNOB_ID>
				<BTN_ID_EXTERNAL>#FUNCTION#_#ID#_Baro_Sync</BTN_ID_EXTERNAL>
			</Parameters>
			<UseTemplate Name="ASOBO_AS1000_Push_Event_Only_Template">
				<TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_KNOB_BARO_ACTION_SET_STD</TT_DESCRIPTION_ID>
				<BTN_ID>#BTN_ID_EXTERNAL#</BTN_ID>
				<SET_STATE_EXTERNAL>#BARO_ID# (&gt;K:BAROMETRIC)</SET_STATE_EXTERNAL>
			</UseTemplate>
			<UseTemplate Name="ASOBO_AS1000_Knob_Template">
				<KNOB_TYPE>PUSH</KNOB_TYPE>
				<ANIM_NAME_KNOB>#AS1000#_Knob_Baro#SUFFIX_ID#</ANIM_NAME_KNOB>
				<ANIM_NAME_PUSH>#AS1000#_Knob_Baro_Push_#ID#</ANIM_NAME_PUSH>
				<PART_ID>#AS1000#_Knob_Baro#SUFFIX_ID#</PART_ID>
				<GET_TT_VALUE_STATE>(A:KOHLSMAN SETTING HG:#BARO_ID#, inHg) sp0</GET_TT_VALUE_STATE>
				<FORMAT_VALUE>l0 '%.2fIN' @sprintf</FORMAT_VALUE>
				<SET_STATE_EXTERNAL>p0 0 &gt; if{ (&gt;H:#KEY_PREFIX#_BARO_INC) } els{ (&gt;H:#KEY_PREFIX#_BARO_DEC) }</SET_STATE_EXTERNAL>
				<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_KNOB_BARO_ACTION</TT_DESCRIPTION_ID>
				<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_KNOB_BARO_TITLE</TOOLTIP_TITLE>
			</UseTemplate>
			<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
		</Component>
		<!-- Buttons -->
		<UseTemplate Name="ASOBO_AS1000_Common_Buttons_Template">
			<NO_MENU>True</NO_MENU>
			<NO_DISPLAY_IN_NODE_ID>True</NO_DISPLAY_IN_NODE_ID>
			<IS_INOP>True</IS_INOP>
		</UseTemplate>
		
		<UseTemplate Name="ASOBO_AS1000_Joystick_Template">
			<ANIM_NAME_L_R>#AS1000#_Joystick_Range_L_R#SUFFIX_ID#</ANIM_NAME_L_R>
			<ANIM_NAME_DN_UP>#AS1000#_Joystick_Range_DN_UP#SUFFIX_ID#</ANIM_NAME_DN_UP>
			<ANIM_NAME_KNOB>#AS1000#_Joystick_Range_Knob#SUFFIX_ID#</ANIM_NAME_KNOB>
			<ANIM_NAME_PUSH>#AS1000#_Joystick_Range_Push#SUFFIX_ID#</ANIM_NAME_PUSH>
			<VAR_NAME>#AS1000#_Joystick_Range_#ID#_Interacting</VAR_NAME>
			<NODE_ID>#AS1000#_Joystick_Range_Knob#SUFFIX_ID#</NODE_ID>
			<PAN_NODE_ID>#AS1000#_Joystick_Range_Pan#SUFFIX_ID#</PAN_NODE_ID>
			<HIGHLIGHT_NODE_ID>#AS1000#_Joystick_Range#SUFFIX_ID#</HIGHLIGHT_NODE_ID>
			<KEY_PREFIX>#RANGE_KEY_PREFIX#</KEY_PREFIX>
			<PAN_UPDATE_FREQUENCY>20</PAN_UPDATE_FREQUENCY>
		</UseTemplate>
	</Component>
</Template>

<!-- AS1000 control Pad -->
<Template Name="ASOBO_AS1000_ControlPad_Template">
	<Parameters Type="Default">
		<AS1000>AS1000</AS1000>
		<DISPLAY>ControlPad</DISPLAY>
		<KEY_PREFIX>AS1000_PFD</KEY_PREFIX>
		<ID>1</ID>
		<MIN_EMISSIVE_PERCENT>0.02</MIN_EMISSIVE_PERCENT>
		<MAX_EMISSIVE_PERCENT>1</MAX_EMISSIVE_PERCENT>
		<POTENTIOMETER>30</POTENTIOMETER>
		<Condition IsVersion="2">
			<True>
				<LIGHT_DIMMING_SCALE>1</LIGHT_DIMMING_SCALE>
			</True>
			<False>
				<LIGHT_DIMMING_SCALE>0.3</LIGHT_DIMMING_SCALE>
			</False>
		</Condition>
		<ANIM_NEVER_FAILS/>
		<WWISE_EVENT_1>as1000_push_button_on</WWISE_EVENT_1>
		<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
	    <WWISE_EVENT_2>as1000_push_button_off</WWISE_EVENT_2>
		<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
	</Parameters>
	<Parameters Type="Default">
		<FUNCTION>ControlPad</FUNCTION>
		<FUNCTION_ID>#ID#</FUNCTION_ID>
	</Parameters>
	<UseTemplate Name="ASOBO_GT_Helper_Suffix_ID_Appender">
		<TEMPLATE_TO_CALL>ASOBO_AS1000_ControlPad_SubTemplate</TEMPLATE_TO_CALL>
		<Switch>
			<Case Check="SIMVAR_POWER_SETTING">
				<GET_POTENTIOMETER>(A:#SIMVAR_POWER_SETTING#, Percent over 100)</GET_POTENTIOMETER>
			</Case>
			<Default>
				<GET_POTENTIOMETER>(A:LIGHT POTENTIOMETER:#POTENTIOMETER#, Percent over 100)</GET_POTENTIOMETER>
			</Default>
		</Switch>
	</UseTemplate>
</Template>

<Template Name="ASOBO_AS1000_ControlPad_SubTemplate">
	<Parameters Type="Default">
		<Condition Check="CIRCUIT_ID">
			<True>
				<FAILURE>(A:CIRCUIT ON:#CIRCUIT_ID#, Bool)</FAILURE>
			</True>
			<False>
				<FAILURE>(A:CIRCUIT GENERAL PANEL ON, Bool)</FAILURE>
			</False>
		</Condition>
		<EMISSIVE_CODE>#GET_POTENTIOMETER# #LIGHT_DIMMING_SCALE# * #MAX_EMISSIVE_PERCENT# #MIN_EMISSIVE_PERCENT# - * #MIN_EMISSIVE_PERCENT# +</EMISSIVE_CODE>
		<!-- Push button list (overridable) -->
		<PUSH_1_KEY_ID>A</PUSH_1_KEY_ID>
		<PUSH_2_KEY_ID>B</PUSH_2_KEY_ID>
		<PUSH_3_KEY_ID>C</PUSH_3_KEY_ID>
		<PUSH_4_KEY_ID>D</PUSH_4_KEY_ID>
		<PUSH_5_KEY_ID>E</PUSH_5_KEY_ID>
		<PUSH_6_KEY_ID>F</PUSH_6_KEY_ID>
		<PUSH_7_KEY_ID>G</PUSH_7_KEY_ID>
		<PUSH_8_KEY_ID>H</PUSH_8_KEY_ID>
		<PUSH_9_KEY_ID>I</PUSH_9_KEY_ID>
		<PUSH_10_KEY_ID>J</PUSH_10_KEY_ID>
		<PUSH_11_KEY_ID>K</PUSH_11_KEY_ID>
		<PUSH_12_KEY_ID>L</PUSH_12_KEY_ID>
		<PUSH_13_KEY_ID>M</PUSH_13_KEY_ID>
		<PUSH_14_KEY_ID>N</PUSH_14_KEY_ID>
		<PUSH_15_KEY_ID>O</PUSH_15_KEY_ID>
		<PUSH_16_KEY_ID>P</PUSH_16_KEY_ID>
		<PUSH_17_KEY_ID>Q</PUSH_17_KEY_ID>
		<PUSH_18_KEY_ID>R</PUSH_18_KEY_ID>
		<PUSH_19_KEY_ID>S</PUSH_19_KEY_ID>
		<PUSH_20_KEY_ID>T</PUSH_20_KEY_ID>
		<PUSH_21_KEY_ID>U</PUSH_21_KEY_ID>
		<PUSH_22_KEY_ID>V</PUSH_22_KEY_ID>
		<PUSH_23_KEY_ID>W</PUSH_23_KEY_ID>
		<PUSH_24_KEY_ID>X</PUSH_24_KEY_ID>
		<PUSH_25_KEY_ID>Y</PUSH_25_KEY_ID>
		<PUSH_26_KEY_ID>Z</PUSH_26_KEY_ID>
		<PUSH_27_KEY_ID>BKSP</PUSH_27_KEY_ID>
		<PUSH_28_KEY_ID>SPC</PUSH_28_KEY_ID>
		<PUSH_29_KEY_ID>0</PUSH_29_KEY_ID>
		<PUSH_30_KEY_ID>1</PUSH_30_KEY_ID>
		<PUSH_31_KEY_ID>2</PUSH_31_KEY_ID>
		<PUSH_32_KEY_ID>3</PUSH_32_KEY_ID>
		<PUSH_33_KEY_ID>4</PUSH_33_KEY_ID>
		<PUSH_34_KEY_ID>5</PUSH_34_KEY_ID>
		<PUSH_35_KEY_ID>6</PUSH_35_KEY_ID>
		<PUSH_36_KEY_ID>7</PUSH_36_KEY_ID>
		<PUSH_37_KEY_ID>8</PUSH_37_KEY_ID>
		<PUSH_38_KEY_ID>9</PUSH_38_KEY_ID>
		<PUSH_39_KEY_ID>Dot</PUSH_39_KEY_ID>
		<PUSH_40_KEY_ID>PlusMinus</PUSH_40_KEY_ID>
		<BUTTON_INOP_COUNT>40</BUTTON_INOP_COUNT>
		<PUSH_41_KEY_ID>FMS</PUSH_41_KEY_ID>
		<PUSH_42_KEY_ID>XPDR</PUSH_42_KEY_ID>
		<PUSH_43_KEY_ID>COM</PUSH_43_KEY_ID>
		<PUSH_44_KEY_ID>NAV</PUSH_44_KEY_ID>
		<PUSH_45_KEY_ID>SWAP</PUSH_45_KEY_ID>
		<PUSH_BUTTON_COUNT>45</PUSH_BUTTON_COUNT>
		<!-- Others (knobs, joytick) -->
		<!-- Alt Knobs -->
		<ALT_KNOB_HUNDRED_NODE_ID>#AS1000#_#DISPLAY#_Knob_Altitude_Hundred#SUFFIX_ID#</ALT_KNOB_HUNDRED_NODE_ID>
		<ALT_KNOB_HUNDRED_ANIM_NAME>#AS1000#_#DISPLAY#_Knob_Altitude_Hundred#SUFFIX_ID#</ALT_KNOB_HUNDRED_ANIM_NAME>
		<ALT_KNOB_HUNDRED_PUSH_ANIM_NAME>#AS1000#_#DISPLAY#_Knob_Altitude_Hundred_Push#SUFFIX_ID#</ALT_KNOB_HUNDRED_PUSH_ANIM_NAME>
		<ALT_KNOB_THOUSAND_NODE_ID>#AS1000#_#DISPLAY#_Knob_Altitude_Thousand#SUFFIX_ID#</ALT_KNOB_THOUSAND_NODE_ID>
		<ALT_KNOB_THOUSAND_ANIM_NAME>#AS1000#_#DISPLAY#_Knob_Altitude_Thousand#SUFFIX_ID#</ALT_KNOB_THOUSAND_ANIM_NAME>
		<!-- Course Knob -->
		<CRS_KNOB_NODE_ID>#AS1000#_#DISPLAY#_Knob_Course#SUFFIX_ID#</CRS_KNOB_NODE_ID>
		<CRS_KNOB_ANIM_NAME>#AS1000#_#DISPLAY#_Knob_Course#SUFFIX_ID#</CRS_KNOB_ANIM_NAME>
		<CRS_KNOB_PUSH_ANIM_NAME>#AS1000#_#DISPLAY#_Knob_Course_Push#SUFFIX_ID#</CRS_KNOB_PUSH_ANIM_NAME>
		<VOR_ID_1>1</VOR_ID_1>
		<VOR_ID_2>2</VOR_ID_2>
		<!-- Heading Knob -->
		<HDG_KNOB_NODE_ID>#AS1000#_#DISPLAY#_Knob_Heading#SUFFIX_ID#</HDG_KNOB_NODE_ID>
		<HDG_KNOB_ANIM_NAME>#AS1000#_#DISPLAY#_Knob_Heading#SUFFIX_ID#</HDG_KNOB_ANIM_NAME>
		<HDG_KNOB_PUSH_ANIM_NAME>#AS1000#_#DISPLAY#_Knob_Heading_Push#SUFFIX_ID#</HDG_KNOB_PUSH_ANIM_NAME>
		<!-- Controller knob -->
		<CNTRL_VAR_SCOPE>I</CNTRL_VAR_SCOPE>
		<CNTRL_VAR_NAME>XMLVAR_CRS_Selection</CNTRL_VAR_NAME>
		<!-- Range Joystick -->
		<RNG_ANIM_NAME_L_R>#AS1000#_#DISPLAY#_Joystick_Range_L_R#SUFFIX_ID#</RNG_ANIM_NAME_L_R>
		<RNG_ANIM_NAME_DN_UP>#AS1000#_#DISPLAY#_Joystick_Range_DN_UP#SUFFIX_ID#</RNG_ANIM_NAME_DN_UP>
		<RNG_ANIM_NAME_KNOB>#AS1000#_#DISPLAY#_Joystick_Range_Knob#SUFFIX_ID#</RNG_ANIM_NAME_KNOB>
		<RNG_ANIM_NAME_PUSH>#AS1000#_#DISPLAY#_Joystick_Range_Push#SUFFIX_ID#</RNG_ANIM_NAME_PUSH>
		<RNG_NODE_ID>#AS1000#_#DISPLAY#_Joystick_Range_Knob#SUFFIX_ID#</RNG_NODE_ID>
		<RNG_PAN_NODE_ID>#AS1000#_#DISPLAY#_Joystick_Range_Pan#SUFFIX_ID#</RNG_PAN_NODE_ID>
		<!-- Panel Emissive -->
		<PANEL_NODE_ID>#AS1000#_#DISPLAY#_Decals#SUFFIX_ID#</PANEL_NODE_ID>
		<RANGE_KEY_PREFIX>AS1000_MFD</RANGE_KEY_PREFIX>
	</Parameters>
	<Loop>
		<Setup>
			<Param>ID</Param>
			<From>1</From>
			<Inc>1</Inc>
			<To>#PUSH_BUTTON_COUNT#</To>
		</Setup>
		<Do>
			<Parameters Type="Override">
				<Condition>
					<Test>
						<LowerOrEqual>
							<Number>#ID#</Number>
							<Number>#BUTTON_INOP_COUNT#</Number>
						</LowerOrEqual>
					</Test>
					<True>
						<ONLY_EMISSIVE>True</ONLY_EMISSIVE>
					</True>
				</Condition>
				<Condition NotEmpty="PUSH_#ID#_NODE_ID">
					<NODE_ID Process="Param">PUSH_#ID#_NODE_ID</NODE_ID>
				</Condition>
				<Condition NotEmpty="PUSH_#ID#_ANIM_NAME">
					<ANIM_NAME Process="Param">PUSH_#ID#_ANIM_NAME</ANIM_NAME>
				</Condition>
				<Condition NotEmpty="PUSH_#ID#_KEY_ID">
					<KEY_ID Process="Param">PUSH_#ID#_KEY_ID</KEY_ID>
				</Condition>
				<Condition NotEmpty="PUSH_#ID#_HTML_KEY">
					<HTML_KEY Process="Param">PUSH_#ID#_HTML_KEY</HTML_KEY>
				</Condition>
			</Parameters>
			<UseTemplate Name="ASOBO_AS1000_ControlPad_Push_Button_Template">
				<BTN_ID>ControlPad_#FUNCTION_ID#_#KEY_ID#</BTN_ID>
			</UseTemplate>
		</Do>
	</Loop>
	
	<UseTemplate Name="ASOBO_AS1000_Common_Buttons_Template">
		<BASE_BTN_ID>AS1000_ControlPad</BASE_BTN_ID>
	</UseTemplate>
	
	<!-- declare all the templates for the rest of the functionnalities -->
	<Component ID="AS1000_ControlPad#SUFFIX_ID#">
		<Parameters Type="Override">
			<USE_INPUT_EVENT_ID>AS1000</USE_INPUT_EVENT_ID>
			<INPUT_EVENT_ID_SOURCE>AS1000_ControlPad_#ID#</INPUT_EVENT_ID_SOURCE>
			<IS_AUTOPILOT>True</IS_AUTOPILOT>
		</Parameters>
		<UseTemplate Name="ASOBO_AUTOPILOT_Knob_Altitude_Template">
			<INCREMENT>100</INCREMENT>
			<NODE_ID>#ALT_KNOB_HUNDRED_NODE_ID#</NODE_ID>
			<PUSH/>
			<ANIM_NAME_KNOB>#ALT_KNOB_HUNDRED_ANIM_NAME#</ANIM_NAME_KNOB>
			<ANIM_NAME_PUSH>#ALT_KNOB_HUNDRED_PUSH_ANIM_NAME#</ANIM_NAME_PUSH>
		</UseTemplate>
		<UseTemplate Name="ASOBO_AUTOPILOT_Knob_Altitude_Template">
			<INCREMENT>1000</INCREMENT>
			<NODE_ID>#ALT_KNOB_THOUSAND_NODE_ID#</NODE_ID>
			<ANIM_NAME>#ALT_KNOB_THOUSAND_ANIM_NAME#</ANIM_NAME>
		</UseTemplate>
		<UseTemplate Name="ASOBO_AUTOPILOT_Knob_Heading_Template">
			<NODE_ID>#HDG_KNOB_NODE_ID#</NODE_ID>
			<PUSH/>
			<ANIM_NAME_KNOB>#HDG_KNOB_ANIM_NAME#</ANIM_NAME_KNOB>
			<ANIM_NAME_PUSH>#HDG_KNOB_PUSH_ANIM_NAME#</ANIM_NAME_PUSH>
		</UseTemplate>
		<Component ID="#AS1000#_#DISPLAY#_CRS#SUFFIX_ID#">
			<UseTemplate Name="ASOBO_AUTOPILOT_Knob_Course_Template">
				<NODE_ID>#CRS_KNOB_NODE_ID#</NODE_ID>
				<ANIM_NAME>#CRS_KNOB_ANIM_NAME#</ANIM_NAME>
				<PUSH/>
				<ANIM_NAME_PUSH>#CRS_KNOB_PUSH_ANIM_NAME#</ANIM_NAME_PUSH>
				<!--VVV DYNAMIC VOR ID params VVV-->
				<DYNAMIC_VOR_ID>True</DYNAMIC_VOR_ID>
				<VOR_ID_1_SELECTED_CHECK>(#CNTRL_VAR_SCOPE#:#CNTRL_VAR_NAME#) #VOR_ID_1# ==</VOR_ID_1_SELECTED_CHECK>
				<ID_1>#VOR_ID_1#</ID_1>
				<ID_2>#VOR_ID_2#</ID_2>
			</UseTemplate>
			<UseTemplate Name="ASOBO_AS1000_ControlPad_Knob_Selector_Template">
				<IS_AUTOPILOT>False</IS_AUTOPILOT>
				<SEL_1>#VOR_ID_1#</SEL_1>
				<SEL_2>#VOR_ID_2#</SEL_2>
				<INPUT_EVENT_ID_SOURCE>AS1000</INPUT_EVENT_ID_SOURCE>
			</UseTemplate>
		</Component>
	</Component>
	<UseTemplate Name="ASOBO_AS1000_Joystick_Template">
		<ANIM_NAME_L_R>#RNG_ANIM_NAME_L_R#</ANIM_NAME_L_R>
		<ANIM_NAME_DN_UP>#RNG_ANIM_NAME_DN_UP#</ANIM_NAME_DN_UP>
		<ANIM_NAME_KNOB>#RNG_ANIM_NAME_KNOB#</ANIM_NAME_KNOB>
		<ANIM_NAME_PUSH>#RNG_ANIM_NAME_PUSH#</ANIM_NAME_PUSH>
		<NODE_ID>#RNG_NODE_ID#</NODE_ID>
		<PAN_NODE_ID>#RNG_PAN_NODE_ID#</PAN_NODE_ID>
		<VAR_NAME>#AS1000#_#DISPLAY#_Joystick_Range_#ID#_Interacting</VAR_NAME>
		<KEY_PREFIX>#RANGE_KEY_PREFIX#</KEY_PREFIX>
		<PAN_UPDATE_FREQUENCY>20</PAN_UPDATE_FREQUENCY>
	</UseTemplate>
	<UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
		<NODE_ID>#PANEL_NODE_ID#</NODE_ID>
	</UseTemplate>
</Template>

<!-- Utils ControlPad -->
<Template Name="ASOBO_AS1000_ControlPad_Push_Button_Template">
	<Parameters Type="Default">
		<NODE_ID>#AS1000#_#DISPLAY#_Push_#KEY_ID##SUFFIX_ID#</NODE_ID>
		<ANIM_NAME>#AS1000#_#DISPLAY#_Push_#KEY_ID##SUFFIX_ID#</ANIM_NAME>
		<PART_ID>#AS1000#_#DISPLAY#_Push_#KEY_ID#</PART_ID>
		<HTML_KEY>#KEY_PREFIX#_#KEY_ID#</HTML_KEY>
		<TOOLTIPID>TT:COCKPIT.TOOLTIPS.INOP</TOOLTIPID>
	</Parameters>
	<Condition Valid="ONLY_EMISSIVE">
		<True>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
			</Component>
		</True>
		<False>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseTemplate Name="ASOBO_AS1000_Push_Button_Template">
					<SET_STATE_EXTERNAL>(&gt;H:#HTML_KEY#)</SET_STATE_EXTERNAL>
					<TT_DESCRIPTION_ID>@TT_Package.AS1000_CONTROLPAD_PUSH_#KEY_ID#_ACTION</TT_DESCRIPTION_ID>
					<TOOLTIP_TITLE>@TT_Package.AS1000_CONTROLPAD_PUSH_#KEY_ID#_TITLE</TOOLTIP_TITLE>
				</UseTemplate>
			</Component>
		</False>
	</Condition>
</Template>

<Template Name="ASOBO_AS1000_ControlPad_Knob_Selector_Template">
	<Parameters Type="Default">
		<CNTRL_KNOB_INNER_NODE_ID>#AS1000#_#DISPLAY#_Knob_Controller_Inner#SUFFIX_ID#</CNTRL_KNOB_INNER_NODE_ID>
		<CNTRL_KNOB_INNER_ANIM_NAME>#AS1000#_#DISPLAY#_Knob_Controller_Inner#SUFFIX_ID#</CNTRL_KNOB_INNER_ANIM_NAME>
		<CNTRL_KNOB_INNER_PUSH_ANIM_NAME>#AS1000#_#DISPLAY#_Knob_Controller_Inner_Push#SUFFIX_ID#</CNTRL_KNOB_INNER_PUSH_ANIM_NAME>
		<CNTRL_KNOB_OUTER_NODE_ID>#AS1000#_#DISPLAY#_Knob_Controller_Outer#SUFFIX_ID#</CNTRL_KNOB_OUTER_NODE_ID>
		<CNTRL_KNOB_OUTER_ANIM_NAME>#AS1000#_#DISPLAY#_Knob_Controller_Outer#SUFFIX_ID#</CNTRL_KNOB_OUTER_ANIM_NAME>
		<PART_ID>#AS1000#_#DISPLAY#_Knob_Controller</PART_ID>
	</Parameters>
	<Parameters Type="Default">
		<SEL_DEFAULT>#SEL_1#</SEL_DEFAULT>
	</Parameters>
	<Component ID="#CNTRL_KNOB_INNER_NODE_ID#" Node="#CNTRL_KNOB_INNER_NODE_ID#">
		<UseTemplate Name="ASOBO_GT_Update">
			<UPDATE_ONCE>True</UPDATE_ONCE>
			<UPDATE_CODE>#SEL_DEFAULT# (&gt;#CNTRL_VAR_SCOPE#:#CNTRL_VAR_NAME#)</UPDATE_CODE>
		</UseTemplate>
		<UseTemplate Name="ASOBO_AS1000_Push_Button_Template">
			<ANIM_NAME>#CNTRL_KNOB_INNER_PUSH_ANIM_NAME#</ANIM_NAME>
			<SET_STATE_EXTERNAL>#SEL_2# #SEL_1# (#CNTRL_VAR_SCOPE#:#CNTRL_VAR_NAME#) #SEL_1# == ? (&gt;#CNTRL_VAR_SCOPE#:#CNTRL_VAR_NAME#)</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_PUSH_VOR_ACTION</TT_DESCRIPTION_ID>
			<TT_VALUE>(#CNTRL_VAR_SCOPE#:#CNTRL_VAR_NAME#) #SEL_1# == if{ 'VOR#SEL_1#' } els{ 'VOR#SEL_2#' }</TT_VALUE>
			<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_PUSH_VOR_TITLE</TOOLTIP_TITLE>
			<BTN_ID>ControlPad_#FUNCTION_ID#_Course_Select</BTN_ID>
		</UseTemplate>
	</Component>
</Template>


<!-- (do not call directly, use AS1000_PFD_Template and AS1000_MFD_Template instead)
	REQUIRED:
		DISPLAY: PFD or MFD
-->
<Template Name="ASOBO_AS1000_Template">
	<Parameters Type="Default">
		<ID>1</ID>
		<AS1000>AS1000</AS1000>
		<FUNCTION>#DISPLAY#</FUNCTION>
		<POTENTIOMETER>30</POTENTIOMETER>
		<Condition IsVersion="2">
			<True>
				<LIGHT_DIMMING_SCALE>1</LIGHT_DIMMING_SCALE>
			</True>
			<False>
				<LIGHT_DIMMING_SCALE>0.3</LIGHT_DIMMING_SCALE>
			</False>
		</Condition>
		<Condition IsVersion="2">
			<True>
				<SCREEN_LIGHT_DIMMING_SCALE>1</SCREEN_LIGHT_DIMMING_SCALE>
			</True>
			<False>
				<SCREEN_LIGHT_DIMMING_SCALE>0.5</SCREEN_LIGHT_DIMMING_SCALE>
			</False>
		</Condition>
		<SCREEN_MIN_EMISSIVE_PERCENT>0.05</SCREEN_MIN_EMISSIVE_PERCENT>
		<MIN_EMISSIVE_PERCENT>0.02</MIN_EMISSIVE_PERCENT>
		<MAX_EMISSIVE_PERCENT>1</MAX_EMISSIVE_PERCENT>
		<MIN_AMBIENT_EMISSIVE_PERCENT>0.1</MIN_AMBIENT_EMISSIVE_PERCENT>
		<ANIM_NEVER_FAILS/>
		<AUTOPILOT_SUFFIX_ID>_1</AUTOPILOT_SUFFIX_ID>
		<ALTIMETER_ID>1</ALTIMETER_ID>
	</Parameters>
	<Parameters Type="Override">
		<Condition NotEmpty="#FUNCTION#_ID">
			<True>
				<FUNCTION_ID Process="Param">#FUNCTION#_ID</FUNCTION_ID>
			</True>
		</Condition>
	</Parameters>
	<Parameters Type="Default">
		<FUNCTION_ID>1</FUNCTION_ID>
	</Parameters>
	<UseTemplate Name="ASOBO_GT_Helper_Suffix_ID_Appender">
		<TEMPLATE_TO_CALL>ASOBO_AS1000_SubTemplate</TEMPLATE_TO_CALL>
		<Switch>
			<Case Check="SIMVAR_POWER_SETTING">
				<GET_POTENTIOMETER>#MAX_EMISSIVE_PERCENT# #SCREEN_MIN_EMISSIVE_PERCENT# - (L:AS1000_#FUNCTION#_Brightness, number) * #SCREEN_MIN_EMISSIVE_PERCENT# + (L:AS1000_#FUNCTION#_Brightness_IsAuto, Bool) ! * @AutomaticBrightnessFactor (L:AS1000_#FUNCTION#_Brightness_IsAuto, Bool) * + (A:#SIMVAR_POWER_SETTING#, Percent over 100) *</GET_POTENTIOMETER>
			</Case>
			<Default>
				<GET_POTENTIOMETER>#MAX_EMISSIVE_PERCENT# #SCREEN_MIN_EMISSIVE_PERCENT# - (L:AS1000_#FUNCTION#_Brightness, number) * #SCREEN_MIN_EMISSIVE_PERCENT# + (L:AS1000_#FUNCTION#_Brightness_IsAuto, Bool) ! * @AutomaticBrightnessFactor (L:AS1000_#FUNCTION#_Brightness_IsAuto, Bool) * + (A:LIGHT POTENTIOMETER:#POTENTIOMETER#, Percent over 100) *</GET_POTENTIOMETER>
			</Default>
		</Switch>
	</UseTemplate>
</Template>
<Template Name="ASOBO_AS1000_SubTemplate">
	<Parameters Type="Default">
		<Condition Check="CIRCUIT_ID">
			<True>
				<FAILURE>(A:CIRCUIT ON:#CIRCUIT_ID#, Bool)</FAILURE>
			</True>
			<False>
				<FAILURE>(A:CIRCUIT GENERAL PANEL ON:0, Bool)</FAILURE>
			</False>
		</Condition>
		<EMISSIVE_CODE>#GET_POTENTIOMETER# #LIGHT_DIMMING_SCALE# * #MAX_EMISSIVE_PERCENT# #MIN_EMISSIVE_PERCENT# - * #MIN_EMISSIVE_PERCENT# +</EMISSIVE_CODE>
		<SCREEN_EMISSIVE_CODE>#GET_POTENTIOMETER# #SCREEN_LIGHT_DIMMING_SCALE# * #MAX_EMISSIVE_PERCENT# #SCREEN_MIN_EMISSIVE_PERCENT# - * #SCREEN_MIN_EMISSIVE_PERCENT# +</SCREEN_EMISSIVE_CODE>
		<KEY_PREFIX>#AS1000#_#FUNCTION#</KEY_PREFIX>
		<Condition Check="NO_AUTOPILOT">
			<False>
				<NO_INDICATOR>True</NO_INDICATOR>
				<!-- <NO_TEXT_EMISSIVE>True</NO_TEXT_EMISSIVE> -->
				<NO_POTENTIOMETER_FACTOR/> <!-- needed to avoid having the factor put twice in emissive code -->
				<PANEL_NODE_ID>#AS1000#_Panel_WithAutopilot#AUTOPILOT_SUFFIX_ID#</PANEL_NODE_ID>
			</False>
			<True>
				<PANEL_NODE_ID>#AS1000#_Panel_NoAutopilot#AUTOPILOT_SUFFIX_ID#</PANEL_NODE_ID>
			</True>
		</Condition>
		<THRESHOLD_MOUSE>0.005</THRESHOLD_MOUSE>
		<THRESHOLD_INPUT>0.00125</THRESHOLD_INPUT>
	</Parameters>
	
	<!-- Ambient light -->
	<Condition Check="AMBIENT_POTENTIOMETER">
		<Component ID="#AS1000#_#DISPLAY#_Ambient_#ID#">
			<UseTemplate Name="ASOBO_LIGHTING_Ambient_Template">
				<BOUNCE_POTENTIOMETER_PERCENT>
					(L:#KEY_PREFIX#_ScreenLuminosity) #GET_POTENTIOMETER# #MAX_EMISSIVE_PERCENT# #SCREEN_MIN_EMISSIVE_PERCENT# - * * #MIN_AMBIENT_EMISSIVE_PERCENT# + #FAILURE# * 100 *
				</BOUNCE_POTENTIOMETER_PERCENT>
				<POTENTIOMETER>#AMBIENT_POTENTIOMETER#</POTENTIOMETER>
			</UseTemplate>
		</Component>
	</Condition>

	<!-- Backlighting -->
	<Component ID="#PANEL_NODE_ID#" Node="#PANEL_NODE_ID#">		
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
			<PART_ID>#AS1000#_#FUNCTION#_Panel</PART_ID>
		</UseTemplate>
	</Component>
	<Component ID="#AS1000#_#DISPLAY#_Screen_#ID#" Node="#AS1000#_#DISPLAY#_Screen#SUFFIX_ID#">
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
			<PART_ID>#AS1000#_#FUNCTION#</PART_ID>
			<EMISSIVE_CODE>#SCREEN_EMISSIVE_CODE#</EMISSIVE_CODE>
		</UseTemplate>
	</Component>
	<Component ID="#AS1000#_#DISPLAY#_Decals_#ID#" Node="#AS1000#_#DISPLAY#_Decals#SUFFIX_ID#">
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
	</Component>
	
	<!-- VOL -->
	<Component ID="#AS1000#_#DISPLAY#_Knob_Volume_1_#ID#" Node="#AS1000#_#DISPLAY#_Knob_Volume_1#SUFFIX_ID#">
		<Parameters Type="Override">
			<KNOB_ID>#FUNCTION#_#FUNCTION_ID#_NAV_Volume</KNOB_ID>
		</Parameters>
		<UseTemplate Name="ASOBO_AS1000_Knob_Template">
			<ANIM_NAME>#AS1000#_#DISPLAY#_Knob_Volume_1#SUFFIX_ID#</ANIM_NAME>
			<GET_TT_VALUE_STATE>(A:NAV VOLUME:1, percent) sp0 (A:NAV VOLUME:2, percent) sp1</GET_TT_VALUE_STATE>
			<FORMAT_VALUE>(L:AS1000_#FUNCTION#_SelectedNavIndex) 1 == if{ l0 'NAV1:&lt;br/&gt;%.2f%%' @sprintf } els{ l1 'NAV2:&lt;br/&gt;%.2f%%' @sprintf }</FORMAT_VALUE>
			<SET_STATE_EXTERNAL>p0 0 &gt; if{ (&gt;H:#KEY_PREFIX#_VOL_1_INC) } els{ (&gt;H:#KEY_PREFIX#_VOL_1_DEC) }</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_KNOB_VOLUME_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_KNOB_VOLUME_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
	</Component>
	<Component ID="#AS1000#_#DISPLAY#_Knob_Volume_2_#ID#" Node="#AS1000#_#DISPLAY#_Knob_Volume_2#SUFFIX_ID#">
		<Parameters Type="Override">
			<KNOB_ID>#FUNCTION#_#FUNCTION_ID#_COM_Volume</KNOB_ID>
		</Parameters>
		<UseTemplate Name="ASOBO_AS1000_Knob_Template">
			<ANIM_NAME>#AS1000#_#DISPLAY#_Knob_Volume_2#SUFFIX_ID#</ANIM_NAME>
			<GET_TT_VALUE_STATE>(A:COM VOLUME:1, percent) sp0 (A:COM VOLUME:2, percent) sp1</GET_TT_VALUE_STATE>
			<FORMAT_VALUE>(L:AS1000_#FUNCTION#_SelectedComIndex) 1 == if{ l0 'COM1:&lt;br/&gt;%.2f%%' @sprintf } els{ l1 'COM2:&lt;br/&gt;%.2f%%' @sprintf }</FORMAT_VALUE>
			<SET_STATE_EXTERNAL>p0 0 &gt; if{ (&gt;H:#KEY_PREFIX#_VOL_2_INC) } els{ (&gt;H:#KEY_PREFIX#_VOL_2_DEC) }</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_COM_KNOB_VOLUME_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_COM_KNOB_VOLUME_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
	</Component>
	
	<!-- NAV -->
	<Component ID="#AS1000#_#DISPLAY#_Push_NAV_Swap_#ID#" Node="#AS1000#_#DISPLAY#_Push_NAV_Swap#SUFFIX_ID#">
		<UseTemplate Name="ASOBO_AS1000_Push_Button_Template">
			<ANIM_NAME>#AS1000#_#DISPLAY#_Push_NAV_Swap#SUFFIX_ID#</ANIM_NAME>
			<PART_ID>#AS1000#_#FUNCTION#_Push_NAV_Swap#SUFFIX_ID#</PART_ID>
			<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_NAV_Switch)</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_PUSH_NAV_SWAP_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_PUSH_NAV_SWAP_TITLE</TOOLTIP_TITLE>
			<BTN_ID>#FUNCTION#_#FUNCTION_ID#_NAV_Swap</BTN_ID>
		</UseTemplate>
	</Component>
	<Component ID="#AS1000#_#DISPLAY#_Knob_NAV_Mhz_#ID#" Node="#AS1000#_#DISPLAY#_Knob_NAV_Mhz#SUFFIX_ID#">
		<Parameters Type="Override">
			<KNOB_ID>#FUNCTION#_#FUNCTION_ID#_NAV_Mhz</KNOB_ID>
		</Parameters>
		<UseTemplate Name="ASOBO_AS1000_Knob_Template">
			<ANIM_NAME>#AS1000#_#DISPLAY#_Knob_NAV_Mhz#SUFFIX_ID#</ANIM_NAME>
			<THRESHOLD_INPUT>0.001</THRESHOLD_INPUT>
			<THRESHOLD_MOUSE>0.003</THRESHOLD_MOUSE>
			<GET_TT_VALUE_STATE>(A:NAV STANDBY FREQUENCY:1, Megahertz) sp0 (A:NAV STANDBY FREQUENCY:2, Megahertz) sp1</GET_TT_VALUE_STATE>
			<FORMAT_VALUE>(L:AS1000_#FUNCTION#_SelectedNavIndex) 1 == if{ l0 'NAV1:&lt;br/&gt;%.2f' @sprintf } els{ l1 'NAV2:&lt;br/&gt;%.2f' @sprintf }</FORMAT_VALUE>
			<SET_STATE_EXTERNAL>p0 0 &gt; if{ (&gt;H:#KEY_PREFIX#_NAV_Large_INC) } els{ (&gt;H:#KEY_PREFIX#_NAV_Large_DEC) }</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_KNOB_NAV_MHZ_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_KNOB_NAV_MHZ_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
	</Component>
	<Component ID="#AS1000#_#DISPLAY#_Knob_NAV_Khz_#ID#" Node="#AS1000#_#DISPLAY#_Knob_NAV_Khz#SUFFIX_ID#">
		<Parameters Type="Override">
			<KNOB_ID>#FUNCTION#_#FUNCTION_ID#_NAV_Khz</KNOB_ID>
			<BTN_ID_EXTERNAL>#FUNCTION#_#FUNCTION_ID#_NAV_Khz_Button</BTN_ID_EXTERNAL>
		</Parameters>
		<UseTemplate Name="ASOBO_AS1000_Push_Event_Only_Template">
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_KNOB_NAV_KHZ_ACTION_SET</TT_DESCRIPTION_ID>
			<BTN_ID>#BTN_ID_EXTERNAL#</BTN_ID>
			<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_NAV_Push)</SET_STATE_EXTERNAL>
			<TT_VALUE>(L:AS1000_#FUNCTION#_SelectedNavIndex) 1 == if{ 'NAV1' } els{ 'NAV2' }</TT_VALUE>
			<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
		</UseTemplate>
		<UseTemplate Name="ASOBO_AS1000_Knob_Template">
			<KNOB_TYPE>PUSH</KNOB_TYPE>
			<ANIM_NAME_KNOB>#AS1000#_#DISPLAY#_Knob_NAV_Khz#SUFFIX_ID#</ANIM_NAME_KNOB>
			<ANIM_NAME_PUSH>#AS1000#_#DISPLAY#_Push_NAV_Select#SUFFIX_ID#</ANIM_NAME_PUSH>
			<PART_ID>#AS1000#_#FUNCTION#_Knob_NAV</PART_ID>
			<THRESHOLD_X_INPUT>0.1</THRESHOLD_X_INPUT>
			<THRESHOLD_X_MOUSE>0.01</THRESHOLD_X_MOUSE>
			<GET_TT_VALUE_STATE>(A:NAV STANDBY FREQUENCY:1, Megahertz) sp0 (A:NAV STANDBY FREQUENCY:2, Megahertz) sp1</GET_TT_VALUE_STATE>
			<FORMAT_VALUE>(L:AS1000_#FUNCTION#_SelectedNavIndex) 1 == if{ l0 'NAV1:&lt;br/&gt;%.2f' @sprintf } els{ l1 'NAV2:&lt;br/&gt;%.2f' @sprintf }</FORMAT_VALUE>
			<SET_STATE_EXTERNAL>p0 0 &gt; if{ (&gt;H:#KEY_PREFIX#_NAV_Small_INC) } els{ (&gt;H:#KEY_PREFIX#_NAV_Small_DEC) }</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_KNOB_NAV_KHZ_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_KNOB_NAV_KHZ_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
	</Component>

	<!-- COM -->
	<Component ID="#AS1000#_#DISPLAY#_Push_COM_Swap_#ID#" Node="#AS1000#_#DISPLAY#_Push_COM_Swap#SUFFIX_ID#">
		<Parameters Type="Override">
			<BTN_ID>#FUNCTION#_#FUNCTION_ID#_COM_Swap</BTN_ID>
			<LONG_CLICK_TIME>2</LONG_CLICK_TIME>
		</Parameters>
		<UseTemplate Name="ASOBO_AS1000_Push_Button_Template">
			<EXTRA_OPTION>_Timed</EXTRA_OPTION>
			<ANIM>HOLD</ANIM>
			<ANIM_NAME>#AS1000#_#DISPLAY#_Push_COM_Swap#SUFFIX_ID#</ANIM_NAME>
			<PART_ID>#AS1000#_#FUNCTION#_Push_COM_Swap#SUFFIX_ID#</PART_ID>
			<!-- Configure event processing -->
			<SET_ARG_COUNT>2</SET_ARG_COUNT><!-- p0: Press/Release, p1:PressDuration, 0 = infinite (if pressing) -->
			<SET_STATE_EXTERNAL>p0 sp0
				l0 0 == if{ (E:SIMULATION TIME, second) (O:_PressTime) - #LONG_CLICK_TIME# &lt; if{ (&gt;H:#KEY_PREFIX#_COM_Switch) } els{ (&gt;H:#KEY_PREFIX#_COM_Switch_Long) 0 (&gt;O:_PressTime) } }
				l0 1 == if{ (E:SIMULATION TIME, second) (&gt;O:_PressTime) p1 (&gt;O:_PressForDuration) }
			</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_PUSH_COM_SWAP_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_PUSH_COM_SWAP_TITLE</TOOLTIP_TITLE>
			<!-- Configure binding for longpress event -->
			<BINDING_SET_0>Push_Long</BINDING_SET_0>
			<BINDING_SET_0_PARAM_0>1</BINDING_SET_0_PARAM_0>
			<BINDING_SET_0_PARAM_1>#LONG_CLICK_TIME#</BINDING_SET_0_PARAM_1>
			<!-- Simply push/release the button -->
			<LEFT_SINGLE_CODE>(&gt;B:AS1000_#BTN_ID#_Push)</LEFT_SINGLE_CODE>
			<SHORT_CLICK_CODE>(&gt;B:AS1000_#BTN_ID#_Release)</SHORT_CLICK_CODE>
			<LONG_CLICK_CODE>(&gt;B:AS1000_#BTN_ID#_Release)</LONG_CLICK_CODE>
		</UseTemplate>
	</Component>
	<Component ID="#AS1000#_#DISPLAY#_Knob_COM_Mhz_#ID#" Node="#AS1000#_#DISPLAY#_Knob_COM_Mhz#SUFFIX_ID#">
		<Parameters Type="Override">
			<KNOB_ID>#FUNCTION#_#FUNCTION_ID#_COM_Mhz</KNOB_ID>
		</Parameters>
		<UseTemplate Name="ASOBO_AS1000_Knob_Template">
			<ANIM_NAME>#AS1000#_#DISPLAY#_Knob_COM_Mhz#SUFFIX_ID#</ANIM_NAME>
			<THRESHOLD_INPUT>0.0005</THRESHOLD_INPUT>
			<THRESHOLD_MOUSE>0.005</THRESHOLD_MOUSE>
			<GET_TT_VALUE_STATE>(A:COM STANDBY FREQUENCY:1, Megahertz) sp0 (A:COM STANDBY FREQUENCY:2, Megahertz) sp1</GET_TT_VALUE_STATE>
			<FORMAT_VALUE>(L:AS1000_#FUNCTION#_SelectedComIndex) 1 == if{ l0 'COM1:&lt;br/&gt;%.3f' @sprintf } els{ l1 'COM2:&lt;br/&gt;%.3f' @sprintf }</FORMAT_VALUE>
			<SET_STATE_EXTERNAL>p0 0 &gt; if{ (&gt;H:#KEY_PREFIX#_COM_Large_INC) } els{ (&gt;H:#KEY_PREFIX#_COM_Large_DEC) }</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_KNOB_COM_MHZ_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_KNOB_COM_MHZ_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
	</Component>
	<Component ID="#AS1000#_#DISPLAY#_Knob_COM_Khz_#ID#" Node="#AS1000#_#DISPLAY#_Knob_COM_Khz#SUFFIX_ID#">
		<Parameters Type="Override">
			<KNOB_ID>#FUNCTION#_#FUNCTION_ID#_COM_Khz</KNOB_ID>
			<BTN_ID_EXTERNAL>#FUNCTION#_#FUNCTION_ID#_COM_Khz_Button</BTN_ID_EXTERNAL>
		</Parameters>
		<UseTemplate Name="ASOBO_AS1000_Push_Event_Only_Template">
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_KNOB_COM_KHZ_ACTION_SET</TT_DESCRIPTION_ID>
			<BTN_ID>#BTN_ID_EXTERNAL#</BTN_ID>
			<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_COM_Push)</SET_STATE_EXTERNAL>
			<TT_VALUE>(L:AS1000_#FUNCTION#_SelectedComIndex) 1 == if{ 'COM1' } els{ 'COM2' }</TT_VALUE>
			<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
		</UseTemplate>
		<UseTemplate Name="ASOBO_AS1000_Knob_Template">
			<KNOB_TYPE>PUSH</KNOB_TYPE>
			<ANIM_NAME_KNOB>#AS1000#_#DISPLAY#_Knob_COM_Khz#SUFFIX_ID#</ANIM_NAME_KNOB>
			<ANIM_NAME_PUSH>#AS1000#_#DISPLAY#_Push_COM_Select#SUFFIX_ID#</ANIM_NAME_PUSH>
			<PART_ID>#AS1000#_#FUNCTION#_Knob_COM</PART_ID>
			<THRESHOLD_X_INPUT>0.05</THRESHOLD_X_INPUT>
			<THRESHOLD_X_MOUSE>0.001</THRESHOLD_X_MOUSE>
			<GET_TT_VALUE_STATE>(A:COM STANDBY FREQUENCY:1, Megahertz) sp0 (A:COM STANDBY FREQUENCY:2, Megahertz) sp1</GET_TT_VALUE_STATE>
			<FORMAT_VALUE>(L:AS1000_#FUNCTION#_SelectedComIndex) 1 == if{ l0 'COM1:&lt;br/&gt;%.3f' @sprintf } els{ l1 'COM2:&lt;br/&gt;%.3f' @sprintf }</FORMAT_VALUE>
			<SET_STATE_EXTERNAL>p0 0 &gt; if{ (&gt;H:#KEY_PREFIX#_COM_Small_INC) } els{ (&gt;H:#KEY_PREFIX#_COM_Small_DEC) }</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_KNOB_COM_KHZ_ACTION</TT_DESCRIPTION_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_KNOB_COM_MHZ_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_KNOB_COM_KHZ_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
	</Component>

	<!-- CRS/BARO -->
	<Component ID="#AS1000#_#DISPLAY#_Knob_Baro_#ID#" Node="#AS1000#_#DISPLAY#_Knob_Baro#SUFFIX_ID#">
		<Parameters Type="Override">
			<KNOB_ID>#FUNCTION#_#FUNCTION_ID#_Baro</KNOB_ID>
		</Parameters>
		<UseTemplate Name="ASOBO_AS1000_Knob_Template">
			<ANIM_NAME>#AS1000#_#DISPLAY#_Knob_Baro#SUFFIX_ID#</ANIM_NAME>
			<PART_ID>#AS1000#_#FUNCTION#_Knob_Baro#SUFFIX_ID#</PART_ID>
			<GET_TT_VALUE_STATE>(A:KOHLSMAN SETTING HG:#ALTIMETER_ID#, inHg) sp0</GET_TT_VALUE_STATE>
			<FORMAT_VALUE>l0 '%.2fIN' @sprintf</FORMAT_VALUE>
			<SET_STATE_EXTERNAL>p0 0 &gt; if{ (&gt;H:#KEY_PREFIX#_BARO_INC) } els{ (&gt;H:#KEY_PREFIX#_BARO_DEC) }</SET_STATE_EXTERNAL>
			<THRESHOLD_INPUT>0.0005</THRESHOLD_INPUT>
			<THRESHOLD_MOUSE>0.005</THRESHOLD_MOUSE>	
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_KNOB_BARO_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_KNOB_BARO_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
	</Component>
	<Component ID="#AS1000#_#DISPLAY#_Knob_Course_#ID#" Node="#AS1000#_#DISPLAY#_Knob_Course#SUFFIX_ID#">
		<Parameters Type="Override">
			<KNOB_ID>#FUNCTION#_#FUNCTION_ID#_Course</KNOB_ID>
			<BTN_ID_EXTERNAL>#FUNCTION#_#FUNCTION_ID#_Course_Button</BTN_ID_EXTERNAL>
		</Parameters>
		<UseTemplate Name="ASOBO_AS1000_Push_Event_Only_Template">
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_KNOB_COURSE_ACTION_SET</TT_DESCRIPTION_ID>
			<BTN_ID>#BTN_ID_EXTERNAL#</BTN_ID>
			<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_CRS_PUSH)</SET_STATE_EXTERNAL>
		</UseTemplate>
		<UseTemplate Name="ASOBO_AS1000_Knob_Template">
			<KNOB_TYPE>PUSH</KNOB_TYPE>
			<ANIM_NAME_KNOB>#AS1000#_#DISPLAY#_Knob_Course#SUFFIX_ID#</ANIM_NAME_KNOB>
			<ANIM_NAME_PUSH>#AS1000#_#DISPLAY#_Push_Course#SUFFIX_ID#</ANIM_NAME_PUSH>
			<ROTATION_SPEED>5</ROTATION_SPEED>
			<THRESHOLD_X_MOUSE>0.001</THRESHOLD_X_MOUSE>
			<THRESHOLD_X_INPUT>0.02</THRESHOLD_X_INPUT>
			<GET_TT_VALUE_STATE>(A:NAV OBS:1, degree) sp0 (A:NAV OBS:2, degree) sp1</GET_TT_VALUE_STATE>
			<FORMAT_VALUE>(L:PFD_CDI_Source) 3 == if{ @TT_NA quit } (L:PFD_CDI_Source) 1 == if{ l0 'VOR1:&lt;br/&gt;%d°' @sprintf quit } (L:PFD_CDI_Source) 2 == if{ l1 'VOR2:&lt;br/&gt;%d°' @sprintf quit }</FORMAT_VALUE>
			<SET_STATE_EXTERNAL>p0 0 &gt; if{ (&gt;H:#KEY_PREFIX#_CRS_INC) } els{ (&gt;H:#KEY_PREFIX#_CRS_DEC) }</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_KNOB_COURSE_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_KNOB_COURSE_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
	</Component>

	<!-- SoftKeys -->
	<UseTemplate Name="ASOBO_AS1000_X_Softkeys_Template">
		<SOFTKEYS_COUNT>12</SOFTKEYS_COUNT>
	</UseTemplate>

	<!-- Other Buttons -->
	<UseTemplate Name="ASOBO_AS1000_Common_Buttons_Template"/>

	<!-- FMS -->
	<Component ID="#AS1000#_#DISPLAY#_Knob_FMS_Inner_#ID#" Node="#AS1000#_#DISPLAY#_Knob_FMS_Inner#SUFFIX_ID#">
		<Parameters Type="Override">
			<KNOB_ID>#FUNCTION#_#FUNCTION_ID#_FMS_Inner</KNOB_ID>
			<BTN_ID_EXTERNAL>#FUNCTION#_#FUNCTION_ID#_FMS_Inner_Button</BTN_ID_EXTERNAL>
		</Parameters>
		<UseTemplate Name="ASOBO_AS1000_Push_Event_Only_Template">
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_KNOB_FMS_INNER_ACTION_SET</TT_DESCRIPTION_ID>
			<BTN_ID>#BTN_ID_EXTERNAL#</BTN_ID>
			<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_FMS_Upper_PUSH)</SET_STATE_EXTERNAL>
		</UseTemplate>
		<UseTemplate Name="ASOBO_AS1000_Knob_Template">
			<KNOB_TYPE>PUSH</KNOB_TYPE>
			<ANIM_NAME_KNOB>#AS1000#_#DISPLAY#_Knob_FMS_Inner#SUFFIX_ID#</ANIM_NAME_KNOB>
			<ANIM_NAME_PUSH>#AS1000#_#DISPLAY#_Push_FMS_Inner#SUFFIX_ID#</ANIM_NAME_PUSH>
			<SET_STATE_EXTERNAL>p0 0 &gt; if{ (&gt;H:#KEY_PREFIX#_FMS_Upper_INC) } els{ (&gt;H:#KEY_PREFIX#_FMS_Upper_DEC) }</SET_STATE_EXTERNAL>
			<BINDING_INC_0>Increment</BINDING_INC_0>
			<BINDING_INC_0_PARAM_0>1</BINDING_INC_0_PARAM_0>
			<BINDING_INC_0_EVENT_ID>G1000_#FUNCTION#_GROUP_KNOB_INC</BINDING_INC_0_EVENT_ID>
			<BINDING_DEC_0>Decrement</BINDING_DEC_0>
			<BINDING_DEC_0_PARAM_0>1</BINDING_DEC_0_PARAM_0>
			<BINDING_DEC_0_EVENT_ID>G1000_#FUNCTION#_GROUP_KNOB_DEC</BINDING_DEC_0_EVENT_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_KNOB_FMS_INNER_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_KNOB_FMS_INNER_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
	</Component>
	<Component ID="#AS1000#_#DISPLAY#_Knob_FMS_Outer_#ID#" Node="#AS1000#_#DISPLAY#_Knob_FMS_Outer#SUFFIX_ID#">
		<Parameters Type="Override">
			<KNOB_ID>#FUNCTION#_#FUNCTION_ID#_FMS_Outer</KNOB_ID>
		</Parameters>
		<UseTemplate Name="ASOBO_AS1000_Knob_Template">
			<ANIM_NAME>#AS1000#_#DISPLAY#_Knob_FMS_Outer#SUFFIX_ID#</ANIM_NAME>
			<THRESHOLD_INPUT>0.001</THRESHOLD_INPUT>
			<THRESHOLD_MOUSE>0.01</THRESHOLD_MOUSE>
			<SET_STATE_EXTERNAL>p0 0 &gt; if{ (&gt;H:#KEY_PREFIX#_FMS_Lower_INC) } els{ (&gt;H:#KEY_PREFIX#_FMS_Lower_DEC) }</SET_STATE_EXTERNAL>
			<BINDING_INC_0>Increment</BINDING_INC_0>
			<BINDING_INC_0_PARAM_0>1</BINDING_INC_0_PARAM_0>
			<BINDING_INC_0_EVENT_ID>G1000_#FUNCTION#_PAGE_KNOB_INC</BINDING_INC_0_EVENT_ID>
			<BINDING_DEC_0>Decrement</BINDING_DEC_0>
			<BINDING_DEC_0_PARAM_0>1</BINDING_DEC_0_PARAM_0>
			<BINDING_DEC_0_EVENT_ID>G1000_#FUNCTION#_PAGE_KNOB_DEC</BINDING_DEC_0_EVENT_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_PFD_KNOB_FMS_INNER_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_PFD_KNOB_FMS_INNER_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
	</Component>
	
	<!-- Range -->
	<UseTemplate Name="ASOBO_AS1000_Joystick_Template">
		<ANIM_NAME_L_R>#AS1000#_#DISPLAY#_Joystick_Range_L_R#SUFFIX_ID#</ANIM_NAME_L_R>
		<ANIM_NAME_DN_UP>#AS1000#_#DISPLAY#_Joystick_Range_DN_UP#SUFFIX_ID#</ANIM_NAME_DN_UP>
		<ANIM_NAME_KNOB>#AS1000#_#DISPLAY#_Joystick_Range_Knob#SUFFIX_ID#</ANIM_NAME_KNOB>
		<ANIM_NAME_PUSH>#AS1000#_#DISPLAY#_Joystick_Range_Push#SUFFIX_ID#</ANIM_NAME_PUSH>
		<VAR_NAME>#AS1000#_#DISPLAY#_Joystick_Range_#ID#_Interacting</VAR_NAME>
		<NODE_ID>#AS1000#_#DISPLAY#_Joystick_Range_Knob#SUFFIX_ID#</NODE_ID>
		<PAN_NODE_ID>#AS1000#_#DISPLAY#_Joystick_Range_Pan#SUFFIX_ID#</PAN_NODE_ID>
		<HIGHLIGHT_NODE_ID>#AS1000#_#DISPLAY#_Joystick_Range_Knob_Visual#SUFFIX_ID#</HIGHLIGHT_NODE_ID>
		<PAN_UPDATE_FREQUENCY>20</PAN_UPDATE_FREQUENCY>
	</UseTemplate>

	<!-- Autopilot -->
	<Component ID="#AS1000#_#FUNCTION#_#FUNCTION_ID#_Autopilot">
		<Parameters Type="Override">
			<USE_INPUT_EVENT_ID>AS1000</USE_INPUT_EVENT_ID>
			<INPUT_EVENT_ID_SOURCE>AS1000_#FUNCTION#_#FUNCTION_ID#</INPUT_EVENT_ID_SOURCE>
			<IS_AUTOPILOT>True</IS_AUTOPILOT>
		</Parameters>
		<Condition Check="NO_AUTOPILOT">
			<False>
				<Condition Check="NO_AUTOPILOT_DECALS">
					<False>
						<!-- Decals emissive -->
						<Component ID="AUTOPILOT_Decals_#ID#" Node="AUTOPILOT_Decals#AUTOPILOT_SUFFIX_ID#">
							<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
						</Component>
					</False>
				</Condition>
				<!-- push buttons -->
				<Condition Check="NO_AUTOPILOT_BUTTONS">
					<False>
						<UseTemplate Name="ASOBO_AUTOPILOT_Push_Autopilot_Template">
							<NODE_ID>Autopilot_Push_Autopilot#AUTOPILOT_SUFFIX_ID#</NODE_ID>
							<EMISSIVE_NODE_ID>Autopilot_Push_Autopilot#AUTOPILOT_SUFFIX_ID#</EMISSIVE_NODE_ID>
							<ANIM_NAME>Autopilot_Push_Autopilot#AUTOPILOT_SUFFIX_ID#</ANIM_NAME>
							<ON_AP_MASTER_SWITCH>FD_ON</ON_AP_MASTER_SWITCH>
						</UseTemplate>
						<UseTemplate Name="ASOBO_AUTOPILOT_Push_BackCourse_Template">
							<NODE_ID>Autopilot_Push_Backcourse#AUTOPILOT_SUFFIX_ID#</NODE_ID>
							<EMISSIVE_NODE_ID>Autopilot_Push_Backcourse#AUTOPILOT_SUFFIX_ID#</EMISSIVE_NODE_ID>
							<ANIM_NAME>Autopilot_Push_Backcourse#AUTOPILOT_SUFFIX_ID#</ANIM_NAME>
						</UseTemplate>
						<UseTemplate Name="ASOBO_AUTOPILOT_Push_FlightDirector_Template">
							<NODE_ID>Autopilot_Push_FlightDirector#AUTOPILOT_SUFFIX_ID#</NODE_ID>
							<EMISSIVE_NODE_ID>Autopilot_Push_FlightDirector#AUTOPILOT_SUFFIX_ID#</EMISSIVE_NODE_ID>
							<ANIM_NAME>Autopilot_Push_FlightDirector#AUTOPILOT_SUFFIX_ID#</ANIM_NAME>
							<ID>0</ID>
							<FD_TOGGLE_CONDITION>(A:AUTOPILOT MASTER, Bool) !</FD_TOGGLE_CONDITION>
							<ON_WHEN_AP_MODE_TURNED_ON>True</ON_WHEN_AP_MODE_TURNED_ON>
							<NO_SIMVAR_LIGHT/>
						</UseTemplate>
						<UseTemplate Name="ASOBO_AUTOPILOT_Push_Heading_Template">
							<NODE_ID>Autopilot_Push_Heading#AUTOPILOT_SUFFIX_ID#</NODE_ID>
							<EMISSIVE_NODE_ID>Autopilot_Push_Heading#AUTOPILOT_SUFFIX_ID#</EMISSIVE_NODE_ID>
							<ANIM_NAME>Autopilot_Push_Heading#AUTOPILOT_SUFFIX_ID#</ANIM_NAME>
						</UseTemplate>
						<UseTemplate Name="ASOBO_AUTOPILOT_Push_Navigation_Template">
							<NODE_ID>Autopilot_Push_Navigation#AUTOPILOT_SUFFIX_ID#</NODE_ID>
							<EMISSIVE_NODE_ID>Autopilot_Push_Navigation#AUTOPILOT_SUFFIX_ID#</EMISSIVE_NODE_ID>
							<ANIM_NAME>Autopilot_Push_Navigation#AUTOPILOT_SUFFIX_ID#</ANIM_NAME>
						</UseTemplate>
						<UseTemplate Name="ASOBO_AUTOPILOT_Push_Approach_Template">
							<NODE_ID>Autopilot_Push_Approach#AUTOPILOT_SUFFIX_ID#</NODE_ID>
							<EMISSIVE_NODE_ID>Autopilot_Push_Approach#AUTOPILOT_SUFFIX_ID#</EMISSIVE_NODE_ID>
							<ANIM_NAME>Autopilot_Push_Approach#AUTOPILOT_SUFFIX_ID#</ANIM_NAME>
							<SIMVAR_TO_WATCH_0>AUTOPILOT APPROACH HOLD</SIMVAR_TO_WATCH_0>
						</UseTemplate>
						<UseTemplate Name="ASOBO_AUTOPILOT_Push_Altitude_Template">
							<NODE_ID>Autopilot_Push_Altitude#AUTOPILOT_SUFFIX_ID#</NODE_ID>
							<EMISSIVE_NODE_ID>Autopilot_Push_Altitude#AUTOPILOT_SUFFIX_ID#</EMISSIVE_NODE_ID>
							<ANIM_NAME>Autopilot_Push_Altitude#AUTOPILOT_SUFFIX_ID#</ANIM_NAME>
						</UseTemplate>
						<UseTemplate Name="ASOBO_AUTOPILOT_Push_Vertical_Navigation_Template">
							<NODE_ID>Autopilot_Push_VerticalNavigation#AUTOPILOT_SUFFIX_ID#</NODE_ID>
							<EMISSIVE_NODE_ID>Autopilot_Push_VerticalNavigation#AUTOPILOT_SUFFIX_ID#</EMISSIVE_NODE_ID>
							<ANIM_NAME>Autopilot_Push_VerticalNavigation#AUTOPILOT_SUFFIX_ID#</ANIM_NAME>
						</UseTemplate>
						<UseTemplate Name="ASOBO_AUTOPILOT_Push_VerticalSpeed_Template">
							<NODE_ID>Autopilot_Push_VerticalSpeed#AUTOPILOT_SUFFIX_ID#</NODE_ID>
							<EMISSIVE_NODE_ID>Autopilot_Push_VerticalSpeed#AUTOPILOT_SUFFIX_ID#</EMISSIVE_NODE_ID>
							<ANIM_NAME>Autopilot_Push_VerticalSpeed#AUTOPILOT_SUFFIX_ID#</ANIM_NAME>
						</UseTemplate>
						<UseTemplate Name="ASOBO_AS1000_Push_Autopilot_Nose_Template">
							<DIRECTION>UP</DIRECTION>
							<ANIM_NAME>Autopilot_Push_VerticalSpeed_UP#AUTOPILOT_SUFFIX_ID#</ANIM_NAME>
							<NODE_ID>Autopilot_Push_VerticalSpeed_UP#AUTOPILOT_SUFFIX_ID#</NODE_ID>
						</UseTemplate>
						<UseTemplate Name="ASOBO_AS1000_Push_Autopilot_Nose_Template">
							<DIRECTION>DN</DIRECTION>
							<ANIM_NAME>Autopilot_Push_VerticalSpeed_DN#AUTOPILOT_SUFFIX_ID#</ANIM_NAME>
							<NODE_ID>Autopilot_Push_VerticalSpeed_DN#AUTOPILOT_SUFFIX_ID#</NODE_ID>
						</UseTemplate>
						<UseTemplate Name="ASOBO_AUTOPILOT_Push_FlightLevelChange_Template">
							<NODE_ID>Autopilot_Push_FlightLevelChange#AUTOPILOT_SUFFIX_ID#</NODE_ID>
							<EMISSIVE_NODE_ID>Autopilot_Push_FlightLevelChange#AUTOPILOT_SUFFIX_ID#</EMISSIVE_NODE_ID>
							<ANIM_NAME>Autopilot_Push_FlightLevelChange#AUTOPILOT_SUFFIX_ID#</ANIM_NAME>
						</UseTemplate>
					</False>
				</Condition>
				<!-- knobs -->
				<UseTemplate Name="ASOBO_AUTOPILOT_Knob_Altitude_Template">
					<INCREMENT>100</INCREMENT>
					<NODE_ID>Autopilot_Knob_Altitude_Hundred#AUTOPILOT_SUFFIX_ID#</NODE_ID>
					<ANIM_NAME>Autopilot_Knob_Altitude_Hundred#AUTOPILOT_SUFFIX_ID#</ANIM_NAME>
					<EMISSIVE_KNOB/>
					<WWISE_EVENT>as3000_knob_turn</WWISE_EVENT>
					<COUNT>36</COUNT>
					<THRESHOLD_INPUT>0.0001</THRESHOLD_INPUT>
					<THRESHOLD_MOUSE>0.003</THRESHOLD_MOUSE>
				</UseTemplate>
				<UseTemplate Name="ASOBO_AUTOPILOT_Knob_Altitude_Template">
					<INCREMENT>1000</INCREMENT>
					<NODE_ID>Autopilot_Knob_Altitude_Thousand#AUTOPILOT_SUFFIX_ID#</NODE_ID>
					<ANIM_NAME>Autopilot_Knob_Altitude_Thousand#AUTOPILOT_SUFFIX_ID#</ANIM_NAME>
					<EMISSIVE_KNOB/>
					<WWISE_EVENT>as3000_big_knob_turn</WWISE_EVENT>
					<COUNT>36</COUNT>
					<THRESHOLD_INPUT>0.0005</THRESHOLD_INPUT>
					<THRESHOLD_MOUSE>0.01</THRESHOLD_MOUSE>
				</UseTemplate>
			</False>
		</Condition>
		<Condition Valid="NO_HEADING">
			<False>
				<UseTemplate Name="ASOBO_AUTOPILOT_Knob_Heading_Template">
					<NODE_ID>Autopilot_Knob_Heading#SUFFIX_ID#</NODE_ID>
					<ANIM_NAME_KNOB>Autopilot_Knob_Heading#SUFFIX_ID#</ANIM_NAME_KNOB>
					<ANIM_NAME_PUSH>Autopilot_Knob_Heading_Push#SUFFIX_ID#</ANIM_NAME_PUSH>
					<EMISSIVE_KNOB/>
					<WWISE_EVENT>as3000_big_knob_turn</WWISE_EVENT>
					<COUNT>36</COUNT>
					<THRESHOLD_X_INPUT>0.01</THRESHOLD_X_INPUT>
					<THRESHOLD_X_MOUSE>0.001</THRESHOLD_X_MOUSE>
					<TYPE>PUSH</TYPE>
				</UseTemplate>
			</False>
		</Condition>
	</Component>
</Template>
<!-- (do not call directly, use AS1000_Mid_Template instead) -->
<Template Name="ASOBO_AS1000_MID_SubTemplate">
	<DefaultTemplateParameters>
		<AS1000>AS1000</AS1000>
		<KEY_PREFIX>AS1000_MID</KEY_PREFIX>
		<EMISSIVE_CODE>#GET_POTENTIOMETER# #LIGHT_DIMMING_SCALE# * #MIN_EMISSIVE_PERCENT# +</EMISSIVE_CODE>
		<ANIM_NEVER_FAILS/>
	</DefaultTemplateParameters>
	
	<!-- Backlighting -->
	<Component ID="#AS1000#_MID_Panel#SUFFIX_ID#" Node="#AS1000#_MID_Panel#SUFFIX_ID#">		
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
	</Component>
	<Component ID="#AS1000#_MID_Decals#SUFFIX_ID#" Node="#AS1000#_MID_Decals#SUFFIX_ID#">
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
	</Component>
	
	<!-- push buttons -->
	<UseTemplate Name="ASOBO_GT_Update">
		<UPDATE_ONCE>True</UPDATE_ONCE>
		<UPDATE_CODE>0 (&gt;K:COPILOT_TRANSMITTER_SET)</UPDATE_CODE>
	</UseTemplate>
	<Loop>
		<Setup>
			<Param>ID</Param>
			<From>1</From>
			<Inc>1</Inc>
			<To>3</To>
		</Setup>
		<Do>
			<Parameters Type="Override">
				<ID_TRANSMIT Process="Int">#ID# 1 -</ID_TRANSMIT>
				<CHECK_STATE_HAS_CHANGED>True</CHECK_STATE_HAS_CHANGED>
			</Parameters>
			<UseTemplate Name="ASOBO_AS1000_Push_Button_With_Indicator_Template">
				<ANIM_NAME>#AS1000#_MID_Push_COM_#ID##SUFFIX_ID#</ANIM_NAME>
				<NODE_ID>#AS1000#_MID_Push_COM_#ID##SUFFIX_ID#</NODE_ID>
				<INDICATOR_NODE_ID>#AS1000#_MID_Push_COM_#ID#_Active#SUFFIX_ID#</INDICATOR_NODE_ID>
				<Condition Check="NO_COM_#ID#">
					<True>
						<DUMMY/>
						<DISABLED/>
						<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_COM_#ID#_Push)</SET_STATE_EXTERNAL>
					</True>
					<False>
						<SIMVAR_TO_WATCH_0>COM RECEIVE:#ID#</SIMVAR_TO_WATCH_0>
						<SIMVAR_TO_WATCH_1>COM TRANSMIT:#ID#</SIMVAR_TO_WATCH_1>
						<GET_STATE_EXTERNAL>(A:COM RECEIVE:#ID#, Bool) sp0</GET_STATE_EXTERNAL>
						<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
						<SET_STATE_0>(A:COM RECEIVE:#ID#, Bool) if{ 0 (&gt;K:COM#ID#_RECEIVE_SELECT) (&gt;H:#KEY_PREFIX#_COM_#ID#_Push) }</SET_STATE_0>
						<SET_STATE_1>(A:COM RECEIVE:#ID#, Bool) ! if{ 1 (&gt;K:COM#ID#_RECEIVE_SELECT) (&gt;H:#KEY_PREFIX#_COM_#ID#_Push) }</SET_STATE_1>
						<COND_INDICATOR_ACTIVE>(B:AS1000_MID_COM_#ID#, Bool)</COND_INDICATOR_ACTIVE>
					</False>
				</Condition>
				<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_PUSH_COM_ACTION</TT_DESCRIPTION_ID>
				<TT_DESCRIPTION_INDEX>#ID#</TT_DESCRIPTION_INDEX>
				<TT_DESCRIPTION_IS_DYNAMIC>True</TT_DESCRIPTION_IS_DYNAMIC>
				<TOOLTIP_TITLE>#ID# (R:1:@TT_Package.AS1000_MID_PUSH_COM_TITLE) @sprintf</TOOLTIP_TITLE>
				<BTN_ID>MID_COM_#ID#</BTN_ID>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
			</UseTemplate>
			<UseTemplate Name="ASOBO_AS1000_Push_Button_With_Indicator_Template">
				<ANIM_NAME>#AS1000#_MID_Push_COM_Mic_#ID##SUFFIX_ID#</ANIM_NAME>
				<NODE_ID>#AS1000#_MID_Push_COM_Mic_#ID##SUFFIX_ID#</NODE_ID>
				<INDICATOR_NODE_ID>#AS1000#_MID_Push_COM_Mic_#ID#_Active#SUFFIX_ID#</INDICATOR_NODE_ID>
				<Condition Check="NO_COM_#ID#">
					<True>
						<DUMMY/>
						<DISABLED/>
						<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_COM_Mic_#ID#_Push)</SET_STATE_EXTERNAL>
					</True>
					<False>
						<SET_STATE_EXTERNAL>
							p0 0 &gt; if{
								(&gt;H:#KEY_PREFIX#_COM_Mic_#ID#_Push)
								#ID_TRANSMIT# (&gt;K:PILOT_TRANSMITTER_SET)
								#ID_TRANSMIT# (&gt;K:COPILOT_TRANSMITTER_SET)
							}
						</SET_STATE_EXTERNAL>
						<SIMVAR_TO_WATCH_0>COM TRANSMIT:#ID#</SIMVAR_TO_WATCH_0>
						<SIMVAR_TO_WATCH_1>COM RECEIVE:#ID#</SIMVAR_TO_WATCH_1>
						<GET_STATE_EXTERNAL>(A:COM TRANSMIT:#ID#, Bool) sp0</GET_STATE_EXTERNAL>
						<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
						<COND_INDICATOR_ACTIVE>(B:AS1000_MID_COM_#ID#_Mic, Bool)</COND_INDICATOR_ACTIVE>	
					</False>
				</Condition>
				<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_PUSH_COM_MIC_ACTION</TT_DESCRIPTION_ID>
				<TT_DESCRIPTION_INDEX>#ID#</TT_DESCRIPTION_INDEX>
				<TT_DESCRIPTION_IS_DYNAMIC>True</TT_DESCRIPTION_IS_DYNAMIC>
				<TOOLTIP_TITLE>#ID# (R:1:@TT_Package.AS1000_MID_PUSH_COM_MIC_TITLE) @sprintf</TOOLTIP_TITLE>
				<BTN_ID>MID_COM_#ID#_Mic</BTN_ID>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
			</UseTemplate>
		</Do>
	</Loop>
	<UseTemplate Name="ASOBO_AS1000_Push_Button_With_Indicator_Template">
		<ANIM_NAME>#AS1000#_MID_Push_COM_Swap_1_2#SUFFIX_ID#</ANIM_NAME>
		<NODE_ID>#AS1000#_MID_Push_COM_Swap_1_2#SUFFIX_ID#</NODE_ID>
		<INDICATOR_NODE_ID>#AS1000#_MID_Push_COM_Swap_1_2_Active#SUFFIX_ID#</INDICATOR_NODE_ID>
		<DUMMY/>
		<Condition Check="NO_COM_3">
			<DISABLED/>
		</Condition>
		<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_COM_Swap_1_2_Push)</SET_STATE_EXTERNAL>
		<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_PUSH_COM_SWAP_ACTION</TT_DESCRIPTION_ID>
		<TOOLTIP_TITLE>@TT_Package.AS1000_MID_PUSH_COM_SWAP_TITLE</TOOLTIP_TITLE>
		<BTN_ID>MID_COM_Swap_1_2</BTN_ID>
	</UseTemplate>
	<UseTemplate Name="ASOBO_GT_Interaction_Tooltip">
		<ANIM_NAME>#AS1000#_MID_Push_TEL#SUFFIX_ID#</ANIM_NAME>
		<NODE_ID>#AS1000#_MID_Push_TEL#SUFFIX_ID#</NODE_ID>
	</UseTemplate>
	<!--<UseTemplate Name="ASOBO_AS1000_Push_Button_With_Indicator_Template">
		<ANIM_NAME>#AS1000#_MID_Push_TEL#SUFFIX_ID#</ANIM_NAME>
		<NODE_ID>#AS1000#_MID_Push_TEL#SUFFIX_ID#</NODE_ID>
		<INDICATOR_NODE_ID>#AS1000#_MID_Push_TEL_Active#SUFFIX_ID#</INDICATOR_NODE_ID>
		<DUMMY/>
		<SIMVAR_TO_WATCH_0>PILOT TRANSMITTER TYPE</SIMVAR_TO_WATCH_0>
		<GET_STATE_EXTERNAL>(A:PILOT TRANSMITTER TYPE, Enum) 3 == sp0</GET_STATE_EXTERNAL>
		<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
		<SET_STATE_EXTERNAL>
			p0 0 &gt; if{
				(&gt;H:#KEY_PREFIX#_TEL_Push)
				(A:PILOT TRANSMITTER TYPE, Enum) 3 != if{ 3 (&gt;K:PILOT_TRANSMITTER_SET) }
			}
		</SET_STATE_EXTERNAL>
		<COND_INDICATOR_ACTIVE>(B:AS1000_MID_TEL, Bool)</COND_INDICATOR_ACTIVE>	
		<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_PUSH_TEL_ACTION</TT_DESCRIPTION_ID>
		<TOOLTIP_TITLE>@TT_Package.AS1000_MID_PUSH_TEL_TITLE</TOOLTIP_TITLE>
		<BTN_ID>MID_TEL</BTN_ID>
	</UseTemplate>-->
	<UseTemplate Name="ASOBO_AS1000_Push_Button_With_Indicator_Template">
		<ANIM_NAME>#AS1000#_MID_Push_PA#SUFFIX_ID#</ANIM_NAME>
		<NODE_ID>#AS1000#_MID_Push_PA#SUFFIX_ID#</NODE_ID>
		<INDICATOR_NODE_ID>#AS1000#_MID_Push_PA_Active#SUFFIX_ID#</INDICATOR_NODE_ID>
		<DUMMY/>
		<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_PA_Push)</SET_STATE_EXTERNAL>
		<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_PUSH_PA_ACTION</TT_DESCRIPTION_ID>
		<TOOLTIP_TITLE>@TT_Package.AS1000_MID_PUSH_PA_TITLE</TOOLTIP_TITLE>
		<BTN_ID>MID_PA</BTN_ID>
	</UseTemplate>
	<UseTemplate Name="ASOBO_AS1000_Push_Button_With_Indicator_Template">
		<ANIM_NAME>#AS1000#_MID_Push_SPKR#SUFFIX_ID#</ANIM_NAME>
		<NODE_ID>#AS1000#_MID_Push_SPKR#SUFFIX_ID#</NODE_ID>
		<INDICATOR_NODE_ID>#AS1000#_MID_Push_SPKR_Active#SUFFIX_ID#</INDICATOR_NODE_ID>
		<SIMVAR_TO_WATCH_0>SPEAKER ACTIVE</SIMVAR_TO_WATCH_0>
		<GET_STATE_EXTERNAL>(A:SPEAKER ACTIVE, Bool) sp0</GET_STATE_EXTERNAL>
		<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
		<SET_STATE_0>(A:SPEAKER ACTIVE, Bool) if{ (&gt;K:TOGGLE_SPEAKER) } (&gt;H:#KEY_PREFIX#_SPKR_Push)</SET_STATE_0>
		<SET_STATE_1>(A:SPEAKER ACTIVE, Bool) ! if{ (&gt;K:TOGGLE_SPEAKER) } (&gt;H:#KEY_PREFIX#_SPKR_Push)</SET_STATE_1>
		<COND_INDICATOR_ACTIVE>(B:AS1000_MID_SPKR, Bool)</COND_INDICATOR_ACTIVE>
		<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_PUSH_SPKR_ACTION</TT_DESCRIPTION_ID>
		<TOOLTIP_TITLE>@TT_Package.AS1000_MID_PUSH_SPKR_TITLE</TOOLTIP_TITLE>
		<BTN_ID>MID_SPKR</BTN_ID>
	</UseTemplate>
	<UseTemplate Name="ASOBO_AS1000_Push_Button_With_Indicator_Template">
		<ANIM_NAME>#AS1000#_MID_Push_MKR_Mute#SUFFIX_ID#</ANIM_NAME>
		<NODE_ID>#AS1000#_MID_Push_MKR_Mute#SUFFIX_ID#</NODE_ID>
		<INDICATOR_NODE_ID>#AS1000#_MID_Push_MKR_Mute_Active#SUFFIX_ID#</INDICATOR_NODE_ID>
		<SIMVAR_TO_WATCH_0>MARKER BEACON TEST MUTE</SIMVAR_TO_WATCH_0>
		<GET_STATE_EXTERNAL>(A:MARKER BEACON TEST MUTE, Bool) sp0</GET_STATE_EXTERNAL>
		<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
		<SET_STATE_0>(A:MARKER BEACON TEST MUTE, Bool) if{ 0 (&gt;K:MARKER_BEACON_TEST_MUTE) } (&gt;H:#KEY_PREFIX#_MKR_Mute_Push)</SET_STATE_0>
		<SET_STATE_1>(A:MARKER BEACON TEST MUTE, Bool) ! if{ 1 (&gt;K:MARKER_BEACON_TEST_MUTE) } (&gt;H:#KEY_PREFIX#_MKR_Mute_Push)</SET_STATE_1>
		<COND_INDICATOR_ACTIVE>(B:AS1000_MID_MKR, Bool)</COND_INDICATOR_ACTIVE>
		<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_PUSH_MKR_ACTION</TT_DESCRIPTION_ID>
		<TOOLTIP_TITLE>@TT_Package.AS1000_MID_PUSH_MKR_TITLE</TOOLTIP_TITLE>
		<BTN_ID>MID_MKR</BTN_ID>
	</UseTemplate>
	<UseTemplate Name="ASOBO_AS1000_Push_Button_With_Indicator_Template">
		<ANIM_NAME>#AS1000#_MID_Push_HI_SENS#SUFFIX_ID#</ANIM_NAME>
		<NODE_ID>#AS1000#_MID_Push_HI_SENS#SUFFIX_ID#</NODE_ID>
		<INDICATOR_NODE_ID>#AS1000#_MID_Push_HI_SENS_Active#SUFFIX_ID#</INDICATOR_NODE_ID>
		<SIMVAR_TO_WATCH_0>MARKER BEACON SENSITIVITY HIGH</SIMVAR_TO_WATCH_0>
		<GET_STATE_EXTERNAL>(A:MARKER BEACON SENSITIVITY HIGH, Bool) sp0</GET_STATE_EXTERNAL>
		<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
		<SET_STATE_0>(A:MARKER BEACON SENSITIVITY HIGH, Bool) if{ 0 (&gt;K:MARKER_BEACON_SENSITIVITY_HIGH) } (&gt;H:#KEY_PREFIX#_HI_SENS_Push)</SET_STATE_0>
		<SET_STATE_1>(A:MARKER BEACON SENSITIVITY HIGH, Bool) ! if{ 1 (&gt;K:MARKER_BEACON_SENSITIVITY_HIGH) } (&gt;H:#KEY_PREFIX#_HI_SENS_Push)</SET_STATE_1>
		<COND_INDICATOR_ACTIVE>(B:AS1000_MID_HI, Bool)</COND_INDICATOR_ACTIVE>
		<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_PUSH_HI_SENS_ACTION</TT_DESCRIPTION_ID>
		<TOOLTIP_TITLE>@TT_Package.AS1000_MID_PUSH_HI_SENS_TITLE</TOOLTIP_TITLE>
		<BTN_ID>MID_HI</BTN_ID>
	</UseTemplate>
	<UseTemplate Name="ASOBO_AS1000_Push_Button_With_Indicator_Template">
		<ANIM_NAME>#AS1000#_MID_Push_DME#SUFFIX_ID#</ANIM_NAME>
		<NODE_ID>#AS1000#_MID_Push_DME#SUFFIX_ID#</NODE_ID>
		<INDICATOR_NODE_ID>#AS1000#_MID_Push_DME_Active#SUFFIX_ID#</INDICATOR_NODE_ID>
		<DUMMY/>
		<SIMVAR_TO_WATCH_0>DME SOUND</SIMVAR_TO_WATCH_0>
		<GET_STATE_EXTERNAL>(A:DME SOUND, Bool) sp0</GET_STATE_EXTERNAL>
		<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
		<SET_STATE_0>(A:DME SOUND, Bool) if{ (&gt;K:RADIO_DME1_IDENT_TOGGLE) } (&gt;H:#KEY_PREFIX#_DME_Push)</SET_STATE_0>
		<SET_STATE_1>(A:DME SOUND, Bool) ! if{ (&gt;K:RADIO_DME1_IDENT_TOGGLE) } (&gt;H:#KEY_PREFIX#_DME_Push)</SET_STATE_1>
		<COND_INDICATOR_ACTIVE>(B:AS1000_MID_DME, Bool)</COND_INDICATOR_ACTIVE>
		<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_PUSH_DME_ACTION</TT_DESCRIPTION_ID>
		<TOOLTIP_TITLE>@TT_Package.AS1000_MID_PUSH_DME_TITLE</TOOLTIP_TITLE>
		<BTN_ID>MID_DME</BTN_ID>
	</UseTemplate>
	<Loop>
		<Setup>
			<Param>ID</Param>
			<From>1</From>
			<Inc>1</Inc>
			<To>2</To>
		</Setup>
		<Do>
			<UseTemplate Name="ASOBO_AS1000_Push_Button_With_Indicator_Template">
				<ANIM_NAME>#AS1000#_MID_Push_NAV_#ID##SUFFIX_ID#</ANIM_NAME>
				<NODE_ID>#AS1000#_MID_Push_NAV_#ID##SUFFIX_ID#</NODE_ID>
				<INDICATOR_NODE_ID>#AS1000#_MID_Push_NAV_#ID#_Active#SUFFIX_ID#</INDICATOR_NODE_ID>
				<DUMMY/>
				<SIMVAR_TO_WATCH_0>NAV SOUND:#ID#</SIMVAR_TO_WATCH_0>
				<GET_STATE_EXTERNAL>(A:NAV SOUND:#ID#, Bool) sp0</GET_STATE_EXTERNAL>
				<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
				<SET_STATE_0>(A:NAV SOUND:#ID#, Bool) if{ (&gt;K:RADIO_VOR#ID#_IDENT_TOGGLE) } (&gt;H:#KEY_PREFIX#_NAV_#ID#_Push)</SET_STATE_0>
				<SET_STATE_1>(A:NAV SOUND:#ID#, Bool) ! if{ (&gt;K:RADIO_VOR#ID#_IDENT_TOGGLE) } (&gt;H:#KEY_PREFIX#_NAV_#ID#_Push)</SET_STATE_1>
				<COND_INDICATOR_ACTIVE>(B:AS1000_MID_NAV_#ID#, Bool)</COND_INDICATOR_ACTIVE>
				<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_PUSH_NAV_ACTION</TT_DESCRIPTION_ID>
				<TT_DESCRIPTION_IS_DYNAMIC>True</TT_DESCRIPTION_IS_DYNAMIC>
				<TT_DESCRIPTION_INDEX>#ID#</TT_DESCRIPTION_INDEX>
				<TOOLTIP_TITLE>#ID# (R:1:@TT_Package.AS1000_MID_PUSH_NAV_TITLE) @sprintf</TOOLTIP_TITLE>
				<BTN_ID>MID_NAV_#ID#</BTN_ID>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
			</UseTemplate>
		</Do>
	</Loop>
	<UseTemplate Name="ASOBO_AS1000_Push_Button_With_Indicator_Template">
		<ANIM_NAME>#AS1000#_MID_Push_ADF#SUFFIX_ID#</ANIM_NAME>
		<NODE_ID>#AS1000#_MID_Push_ADF#SUFFIX_ID#</NODE_ID>
		<INDICATOR_NODE_ID>#AS1000#_MID_Push_ADF_Active#SUFFIX_ID#</INDICATOR_NODE_ID>
		<COND_INDICATOR_ACTIVE>(A:ADF SOUND, Bool)</COND_INDICATOR_ACTIVE>
		<DUMMY/>
		<SIMVAR_TO_WATCH_0>ADF SOUND</SIMVAR_TO_WATCH_0>
		<GET_STATE_EXTERNAL>(A:ADF SOUND, Bool) sp0</GET_STATE_EXTERNAL>
		<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
		<SET_STATE_0>(A:ADF SOUND, Bool) if{ (&gt;K:RADIO_ADF_IDENT_TOGGLE) } (&gt;H:#KEY_PREFIX#_ADF_Push)</SET_STATE_0>
		<SET_STATE_1>(A:ADF SOUND, Bool) ! if{ (&gt;K:RADIO_ADF_IDENT_TOGGLE) } (&gt;H:#KEY_PREFIX#_ADF_Push)</SET_STATE_1>
		<COND_INDICATOR_ACTIVE>(B:AS1000_MID_ADF, Bool)</COND_INDICATOR_ACTIVE>
		<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_PUSH_ADF_ACTION</TT_DESCRIPTION_ID>
		<TOOLTIP_TITLE>@TT_Package.AS1000_MID_PUSH_ADF_TITLE</TOOLTIP_TITLE>
		<BTN_ID>MID_ADF</BTN_ID>
	</UseTemplate>
	<UseTemplate Name="ASOBO_AS1000_Push_Button_With_Indicator_Template">
		<ANIM_NAME>#AS1000#_MID_Push_AUX#SUFFIX_ID#</ANIM_NAME>
		<NODE_ID>#AS1000#_MID_Push_AUX#SUFFIX_ID#</NODE_ID>
		<INDICATOR_NODE_ID>#AS1000#_MID_Push_AUX_Active#SUFFIX_ID#</INDICATOR_NODE_ID>
		<DUMMY/>
		<Condition Check="NO_AUX">
			<DISABLED/>
		</Condition>
		<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_AUX_Push)</SET_STATE_EXTERNAL>
		<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_PUSH_AUX_ACTION</TT_DESCRIPTION_ID>
		<TOOLTIP_TITLE>@TT_Package.AS1000_MID_PUSH_AUX_TITLE</TOOLTIP_TITLE>
		<BTN_ID>MID_AUX</BTN_ID>
	</UseTemplate>
	<UseTemplate Name="ASOBO_AS1000_Push_Button_With_Indicator_Template">
		<ANIM_NAME>#AS1000#_MID_Push_MAN_SQ#SUFFIX_ID#</ANIM_NAME>
		<NODE_ID>#AS1000#_MID_Push_MAN_SQ#SUFFIX_ID#</NODE_ID>
		<INDICATOR_NODE_ID>#AS1000#_MID_Push_MAN_SQ_Active#SUFFIX_ID#</INDICATOR_NODE_ID>
		<DUMMY/>
		<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_MAN_SQ_Push)</SET_STATE_EXTERNAL>
		<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_PUSH_MAN_SQ_ACTION</TT_DESCRIPTION_ID>
		<TOOLTIP_TITLE>@TT_Package.AS1000_MID_PUSH_MAN_SQ_TITLE</TOOLTIP_TITLE>
		<BTN_ID>MID_MAN_SQ</BTN_ID>
	</UseTemplate>
	<UseTemplate Name="ASOBO_AS1000_Push_Button_With_Indicator_Template">
		<ANIM_NAME>#AS1000#_MID_Push_Play#SUFFIX_ID#</ANIM_NAME>
		<NODE_ID>#AS1000#_MID_Push_Play#SUFFIX_ID#</NODE_ID>
		<INDICATOR_NODE_ID>#AS1000#_MID_Push_Play_Active#SUFFIX_ID#</INDICATOR_NODE_ID>
		<DUMMY/>
		<SET_STATE_EXTERNAL>(&gt;H:#KEY_PREFIX#_Play_Push)</SET_STATE_EXTERNAL>
		<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_PUSH_PLAY_ACTION</TT_DESCRIPTION_ID>
		<TOOLTIP_TITLE>@TT_Package.AS1000_MID_PUSH_PLAY_TITLE</TOOLTIP_TITLE>
		<BTN_ID>MID_Play</BTN_ID>
	</UseTemplate>
	<UseTemplate Name="ASOBO_AS1000_Push_Button_With_Indicator_Template">
		<ANIM_NAME>#AS1000#_MID_Push_Isolate_Pilot#SUFFIX_ID#</ANIM_NAME>
		<NODE_ID>#AS1000#_MID_Push_Isolate_Pilot#SUFFIX_ID#</NODE_ID>
		<INDICATOR_NODE_ID>#AS1000#_MID_Push_Isolate_Pilot_Active#SUFFIX_ID#</INDICATOR_NODE_ID>
		<SIMVAR_TO_WATCH_0>INTERCOM MODE</SIMVAR_TO_WATCH_0>
		<SIMVAR_TO_WATCH_1>INTERCOM SYSTEM ACTIVE</SIMVAR_TO_WATCH_1>
		<GET_STATE_EXTERNAL>(A:INTERCOM MODE, Enum) 2 &lt; (A:INTERCOM SYSTEM ACTIVE, Bool) and sp0</GET_STATE_EXTERNAL>
		<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
		<CHECK_STATE_HAS_CHANGED>True</CHECK_STATE_HAS_CHANGED>
		<SET_STATE_EXTERNAL>
			(&gt;H:#KEY_PREFIX#_Isolate_Pilot_Push)
			(A:INTERCOM MODE, Enum) 0 == (A:INTERCOM SYSTEM ACTIVE, Bool) and if{ (&gt;K:TOGGLE_ICS) } els{
				(A:INTERCOM SYSTEM ACTIVE, Bool) ! if{ 
					(&gt;K:TOGGLE_ICS) 
					0 (&gt;K:INTERCOM_MODE_SET)
				} els{
					1 2 0 3 (A:INTERCOM MODE, Enum) case (&gt;K:INTERCOM_MODE_SET)	
				}
			}
		</SET_STATE_EXTERNAL>
		<COND_INDICATOR_ACTIVE>(B:AS1000_MID_Isolate_Pilot, Bool)</COND_INDICATOR_ACTIVE>
		<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_PUSH_ISOLATE_ACTION</TT_DESCRIPTION_ID>
		<TOOLTIP_TITLE>@TT_Package.AS1000_MID_PUSH_ISOLATE_TITLE</TOOLTIP_TITLE>
		<BTN_ID>MID_Isolate_Pilot</BTN_ID>
	</UseTemplate>
	<UseTemplate Name="ASOBO_AS1000_Push_Button_With_Indicator_Template">
		<ANIM_NAME>#AS1000#_MID_Push_Isolate_Copilot#SUFFIX_ID#</ANIM_NAME>
		<NODE_ID>#AS1000#_MID_Push_Isolate_Copilot#SUFFIX_ID#</NODE_ID>
		<INDICATOR_NODE_ID>#AS1000#_MID_Push_Isolate_Copilot_Active#SUFFIX_ID#</INDICATOR_NODE_ID>
		<SIMVAR_TO_WATCH_0>INTERCOM MODE</SIMVAR_TO_WATCH_0>
		<SIMVAR_TO_WATCH_1>INTERCOM SYSTEM ACTIVE</SIMVAR_TO_WATCH_1>
		<GET_STATE_EXTERNAL>(A:INTERCOM MODE, Enum) 0 &gt; (A:INTERCOM SYSTEM ACTIVE, Bool) and sp0</GET_STATE_EXTERNAL>
		<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
		<CHECK_STATE_HAS_CHANGED>True</CHECK_STATE_HAS_CHANGED>
		<SET_STATE_EXTERNAL>
			(&gt;H:#KEY_PREFIX#_Isolate_Copilot_Push)
			(A:INTERCOM MODE, Enum) 2 == (A:INTERCOM SYSTEM ACTIVE, Bool) and if{ (&gt;K:TOGGLE_ICS) } els{
				(A:INTERCOM SYSTEM ACTIVE, Bool) ! if{ 
					(&gt;K:TOGGLE_ICS)
					2 (&gt;K:INTERCOM_MODE_SET)
				} els{
					2 0 1 3 (A:INTERCOM MODE, Enum) case (&gt;K:INTERCOM_MODE_SET)
				}
			}
		</SET_STATE_EXTERNAL>
		<COND_INDICATOR_ACTIVE>(B:AS1000_MID_Isolate_Copilot, Bool)</COND_INDICATOR_ACTIVE>
		<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_PUSH_ISOLATECO_ACTION</TT_DESCRIPTION_ID>
		<TOOLTIP_TITLE>@TT_Package.AS1000_MID_PUSH_ISOLATECO_TITLE</TOOLTIP_TITLE>
		<BTN_ID>MID_Isolate_Copilot</BTN_ID>
	</UseTemplate>

	<!-- Knobs -->
	<Component ID="#AS1000#_MID_Knob_Pass_Pilot#SUFFIX_ID#" Node="#AS1000#_MID_Knob_Pass_Pilot#SUFFIX_ID#">
		<UseTemplate Name="ASOBO_AS1000_Knob_Template">
			<ANIM_NAME>#AS1000#_MID_Knob_Pass_Pilot#SUFFIX_ID#</ANIM_NAME>
			<SET_STATE_EXTERNAL>(&gt;K:AUDIO_PANEL_VOLUME_SET)</SET_STATE_EXTERNAL>
			<GET_STATE_EXTERNAL>(A:AUDIO PANEL VOLUME, percent)</GET_STATE_EXTERNAL>
			<KNOB_ID>MID_Pass_Pilot</KNOB_ID>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_KNOB_PASS_PILOT_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_MID_KNOB_PASS_PILOT_TITLE</TOOLTIP_TITLE>
			<SIMVAR_TO_WATCH_0>AUDIO PANEL VOLUME</SIMVAR_TO_WATCH_0>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
	</Component>
	<Component ID="#AS1000#_MID_Knob_Pass_Copilot#SUFFIX_ID#" Node="#AS1000#_MID_Knob_Pass_Copilot#SUFFIX_ID#">
		<Parameters Type="Override">
			<KNOB_ID>MID_Pass_Copilot</KNOB_ID>
		</Parameters>
		<UseTemplate Name="ASOBO_AS1000_Knob_Template">
			<ANIM_NAME>#AS1000#_MID_Knob_Pass_Copilot#SUFFIX_ID#</ANIM_NAME>
			<SET_STATE_EXTERNAL>p0 0 &gt; if{ (&gt;H:#KEY_PREFIX#_Pass_Copilot_INC) } els{ (&gt;H:#KEY_PREFIX#_Pass_Copilot_DEC) }</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_KNOB_PASS_COPILOT_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_MID_KNOB_PASS_COPILOT_TITLE</TOOLTIP_TITLE>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Emissive_Gauge"/>
	</Component>
	
	<!-- Display backup -->
	<Component ID="#AS1000#_MID_Push_Display_Backup#SUFFIX_ID#" Node="#AS1000#_MID_Push_Display_Backup#SUFFIX_ID#">
		<UseTemplate Name="ASOBO_AS1000_Push_Button_Template">
			<ANIM_NAME>#AS1000#_MID_Push_Display_Backup#SUFFIX_ID#</ANIM_NAME>
			<PART_ID>#AS1000#_MID_Push_Display_Backup#SUFFIX_ID#</PART_ID>
			<GET_STATE_EXTERNAL>(L:#KEY_PREFIX#_Display_Backup_Active)</GET_STATE_EXTERNAL>
			<SET_STATE_EXTERNAL>p0 (&gt;L:#KEY_PREFIX#_Display_Backup_Active)</SET_STATE_EXTERNAL>
			<TT_DESCRIPTION_ID>@TT_Package.AS1000_MID_PUSH_DISPLAY_BACKUP_ACTION_SET</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.AS1000_MID_PUSH_DISPLAY_BACKUP_TITLE</TOOLTIP_TITLE>
			<BTN_ID>MID_Display_Backup</BTN_ID>
		</UseTemplate>
	</Component>
</Template>

<!-- ############################################################## -->
<!-- PFD, MFD & MID tpl ########################################### -->
<!-- ############################################################## -->

<Template Name="ASOBO_AS1000_PFD_Template">
	<UseTemplate Name="ASOBO_AS1000_Template">
		<DISPLAY>PFD</DISPLAY>
		<FUNCTION>PFD</FUNCTION>
	</UseTemplate>
</Template>
<Template Name="ASOBO_AS1000_MFD_Template">
	<UseTemplate Name="ASOBO_AS1000_Template">
		<DISPLAY>PFD</DISPLAY>
		<FUNCTION>MFD</FUNCTION>
	</UseTemplate>
</Template>
<Template Name="ASOBO_AS1000_MID_Template">
	<DefaultTemplateParameters>
		<POTENTIOMETER>30</POTENTIOMETER>
		<Condition IsVersion="2">
			<True>
				<LIGHT_DIMMING_SCALE>1</LIGHT_DIMMING_SCALE>
			</True>
			<False>
				<LIGHT_DIMMING_SCALE>0.5</LIGHT_DIMMING_SCALE>
			</False>
		</Condition>
		<MIN_EMISSIVE_PERCENT>0.02</MIN_EMISSIVE_PERCENT>
		<ID>1</ID>
		<Condition Check="CIRCUIT_ID">
			<True>
				<FAILURE>(A:CIRCUIT ON:#CIRCUIT_ID#, Bool)</FAILURE>
			</True>
			<False>
				<FAILURE>(A:CIRCUIT GENERAL PANEL ON:0, Bool)</FAILURE>
			</False>
		</Condition>
		<EMISSIVE_SCALE/>
	</DefaultTemplateParameters>
	
	<UseTemplate Name="ASOBO_GT_Helper_Suffix_ID_Appender">
		<TEMPLATE_TO_CALL>ASOBO_AS1000_MID_SubTemplate</TEMPLATE_TO_CALL>
		<Switch>
			<Case Check="SIMVAR_POWER_SETTING">
				<GET_POTENTIOMETER>(A:#SIMVAR_POWER_SETTING#, Percent over 100) #EMISSIVE_SCALE#</GET_POTENTIOMETER>
			</Case>
			<Default>
				<GET_POTENTIOMETER>(A:LIGHT POTENTIOMETER:#POTENTIOMETER#, Percent over 100) #EMISSIVE_SCALE#</GET_POTENTIOMETER>
			</Default>
		</Switch>
	</UseTemplate>
</Template>

<!-- ############################################################## -->
</ModelBehaviors>